// <auto-generated />
using System;
using EverythingSucks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EverythingSucks.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartStatusId");

                    b.ToTable("Cart", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3381228b-d4b1-40ef-b7d3-d7b361b98424"),
                            UserId = "9b021dab-e578-4f1e-b950-3c879b260f59"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.CartStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CartStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1f69a75-bf1c-4a53-a8a8-90b7b069f95f"),
                            Name = "Có hàng"
                        },
                        new
                        {
                            Id = new Guid("37a6cdc6-efb9-4373-9006-2867177ecb7a"),
                            Name = "Trống"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f39163f3-fb6e-4efe-9c51-ab56525a57ad"),
                            Name = "Áo"
                        },
                        new
                        {
                            Id = new Guid("e60de07f-6df6-4cde-b2ff-d5d0b3790e1e"),
                            Name = "Quần"
                        },
                        new
                        {
                            Id = new Guid("ab709163-8d52-4b0f-a057-756860ea59b0"),
                            Name = "Phụ kiện"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1929ac40-c469-43b9-8415-b1e135870ede"),
                            ColorCode = "#FFFFFF",
                            Name = "White"
                        },
                        new
                        {
                            Id = new Guid("9d398d30-f4e6-4777-afa9-2f59f0192f2d"),
                            ColorCode = "#DEDEDE",
                            Name = "Grey"
                        },
                        new
                        {
                            Id = new Guid("dbfc57d3-e295-403a-b27d-a39c2974f55b"),
                            ColorCode = "#3D3D3D",
                            Name = "Black"
                        },
                        new
                        {
                            Id = new Guid("74737dac-7703-44b0-9621-4a77ca248c6e"),
                            ColorCode = "#F5C0C9",
                            Name = "Pink"
                        },
                        new
                        {
                            Id = new Guid("4c702782-abd0-485a-a945-78ff78046618"),
                            ColorCode = "#EB3417",
                            Name = "Red"
                        },
                        new
                        {
                            Id = new Guid("a043c7b9-cf84-4fd1-afad-f83b3dfe4b34"),
                            ColorCode = "#F3A72C",
                            Name = "Orange"
                        },
                        new
                        {
                            Id = new Guid("fc9f079b-e785-493b-b0ec-6bbdbf459e68"),
                            ColorCode = "#EFEBD4",
                            Name = "Beige"
                        },
                        new
                        {
                            Id = new Guid("304d8429-e16f-421b-a5eb-813d8dbf00b6"),
                            ColorCode = "#714E36",
                            Name = "Brown"
                        },
                        new
                        {
                            Id = new Guid("722f201b-d3d2-4941-8c19-8e3bea681aaf"),
                            ColorCode = "#FFFF3F",
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("8dac05f0-5f3d-4162-82ba-16156c991a4c"),
                            ColorCode = "#387D1F",
                            Name = "Green"
                        },
                        new
                        {
                            Id = new Guid("e233d819-ab20-43d9-a5bf-d2f40370e42c"),
                            ColorCode = "#0003F9",
                            Name = "Blue"
                        },
                        new
                        {
                            Id = new Guid("857ecdc3-f257-4f20-a03b-523fedf9056a"),
                            ColorCode = "#741A7C",
                            Name = "Purple"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Favorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FavoriteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("95fe6d77-522e-48e7-9882-c3ca45925213"),
                            Name = "Đang chờ xác nhận"
                        },
                        new
                        {
                            Id = new Guid("93b236b4-46f6-43f5-a52c-446cfa0d799e"),
                            Name = "Xác nhận"
                        },
                        new
                        {
                            Id = new Guid("3341c0e8-81dd-4474-8ae5-886df544a63c"),
                            Name = "Chờ giao hàng"
                        },
                        new
                        {
                            Id = new Guid("c1ae3cfe-e539-4157-bcd3-4c85f0a1bdd4"),
                            Name = "Đã giao"
                        },
                        new
                        {
                            Id = new Guid("3e44c3f2-dc7a-4428-a101-1fc6381f8aaf"),
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b54b3fd-b9e6-486b-8fe0-9c36f99d4ec1"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6475),
                            Description = "Bộ sưu tập U từ thương hiệu Uniqlo là kết tinh sáng tạo của đội ngũ thiết kế quốc tế tận tâm và tài năng đến từ Trung tâm Nghiên cứu và Phát triển Paris, dưới sự dẫn dắt của Giám đốc Nghệ thuật Christophe Lemaire.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Dáng Rộng Tay Lỡ",
                            Price = 391000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "airism-cotton-ao-thun-dang-rong-tay-lo",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6485)
                        },
                        new
                        {
                            Id = new Guid("6ea3d056-9bd0-46ad-939a-03677d79282f"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6488),
                            Description = "Vải 'DRY-EX' nhanh chóng hấp thụ và hút ẩm để giữ cho làn da của bạn cảm giác tươi mát.",
                            IsDeleted = false,
                            Name = "DRY-EX Áo Thun Cổ Tròn",
                            Price = 391000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "dry-ex-ao-thun-co-tron",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6488)
                        },
                        new
                        {
                            Id = new Guid("2043aadc-0040-4f3a-85fd-1a63acf6b25d"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6490),
                            Description = "Chất liệu 100% cotton bền chắc, cổ áo được làm bằng vải mềm, thiết kế giản dị lấy cảm hứng từ áo bóng bầu dục cổ điển.",
                            IsDeleted = false,
                            Name = "Áo Thun Vải Cotton Cổ Henley Ngắn Tay",
                            Price = 489000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-vai-cotton-co-henley-ngan-tay",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6491)
                        },
                        new
                        {
                            Id = new Guid("f8f0e63e-d665-452e-9214-a0ff58784d65"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6492),
                            Description = "Chất liệu 100% cotton cực dày dặn, cảm giác sắc nét, mịn màng, được giặt trước một lần nước để có phong cách hoàn toàn giản dị.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Kẻ Sọc Cổ Tròn Tay Lỡ",
                            Price = 391000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-dang-rong-ke-soc-co-tron-tay-lo",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6493)
                        },
                        new
                        {
                            Id = new Guid("9b254a17-1c58-4510-92fb-47af6486e947"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6494),
                            Description = "100% cotton SUPIMA® cao cấp, mịn màng, thiết kế cơ bản phù hợp tạo kiểu với nhiều phong cách khác nhau từ đơn giản đến layer, được thiết kế tỉ mỉ đến từng chi tiết, từ chiều rộng cổ áo đến đường may.",
                            IsDeleted = false,
                            Name = "Áo Thun Supima Cotton Cổ Tròn Ngắn Tay",
                            Price = 391000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-supima-cotton-co-tron-ngan-tay",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6495)
                        },
                        new
                        {
                            Id = new Guid("7ddf83f8-dc5f-4a4a-a61b-3932e4e0faa9"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6497),
                            Description = "Cảm giác giản dị của cotton, lớp lót polyester Với công nghệ DRY khô nhanh, thiết kế cơ bản mà bạn có thể tự tạo phong cách riêng hoặc theo Kiểu layer.",
                            IsDeleted = false,
                            Name = "Áo Thun Dry Cổ Tròn Nhiều Màu",
                            Price = 146000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-dry-co-tron-nhieu-mau",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6497)
                        },
                        new
                        {
                            Id = new Guid("acc12af6-206f-4be9-9444-54204d5efc2d"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6499),
                            Description = "Chất liệu vải jersey 100% cotton dày dặn, mang lại cảm giác tươi mát, vải jersey khô được dệt nhỏ gọn có độ bền cao và có đặc tính sau mỗi lần giặt, buộc dây ở cổ áo giúp giữ nguyên kiểu dáng đường viền cổ áo.",
                            IsDeleted = false,
                            Name = "Áo Thun Cổ Tròn Ngắn Tay",
                            Price = 293000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-co-tron-ngan-tay",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6499)
                        },
                        new
                        {
                            Id = new Guid("602160e3-1d48-41ca-ad05-be16db6c17d0"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6502),
                            Description = "Một phiên bản mới của chiếc áo thun cổ tròn vải waffle nay đã có mặt, được thiết kế với kiểu dáng đơn giản, không có túi ở phần trước ngực, cải tiến với đường may thẳng cùng kiểu dáng xẻ tà, dễ dàng mặc cho mọi dịp.",
                            IsDeleted = false,
                            Name = "Áo Thun Vải Waffle Dài Tay",
                            Price = 391000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-vai-waffle-dai-tay",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6502)
                        },
                        new
                        {
                            Id = new Guid("09c61295-4094-47c2-b594-d0a689a7fc9f"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6504),
                            Description = "Vải 'AIRism' mịn màng trông như cotton, cổ tròn hẹp mang lại vẻ ngoài bóng bẩy, vai trễ và tay áo dài đến một nửa rộng rãi, chất liệu vải tạo dáng tôn dáng.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Dáng Rộng",
                            Price = 391000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "airism-cotton-ao-thun-dang-rong",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6505)
                        },
                        new
                        {
                            Id = new Guid("9b80d2ca-47df-4fab-8255-f29d155232a6"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6506),
                            Description = "Chất vải 'AIRism' mịn màng trông như cotton, Với công nghệ DRY khô nhanh, chất liệu vải sắc nét tạo nên kiểu dáng đẹp mắt.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Không Tay",
                            Price = 293000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "airism-cotton-ao-thun-khong-tay",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6507)
                        },
                        new
                        {
                            Id = new Guid("b63d6b79-26af-4ee6-9eb4-9d1c85a0eddf"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6508),
                            Description = "Phần thân được làm từ chất liệu 100% cotton cực dày dặn, cảm giác khá sắc nét, mịn màng, giữ nguyên hình dạng sau khi giặt.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Tay Lỡ (Ringer)",
                            Price = 293000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-dang-rong-tay-lo-ringer",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6509)
                        },
                        new
                        {
                            Id = new Guid("6d7ec1b2-272a-4ca5-8181-0d6c96c7a310"),
                            CreatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6597),
                            Description = "Chất liệu 100% cotton dày dặn hoàn hảo, cảm giác sắc nét, mịn màng, giữ nguyên hình dạng sau khi giặt.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Tay Lỡ (Raglan)",
                            Price = 293000m,
                            ProductTypeId = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            Slug = "ao-thun-dang-rong-tay-lo-raglan",
                            UpdatedAt = new DateTime(2024, 8, 9, 22, 12, 59, 909, DateTimeKind.Local).AddTicks(6597)
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProdductColor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d508f67-86ce-48c7-a0ed-c575b536ada3"),
                            ColorId = new Guid("dbfc57d3-e295-403a-b27d-a39c2974f55b"),
                            ProductId = new Guid("2b54b3fd-b9e6-486b-8fe0-9c36f99d4ec1")
                        },
                        new
                        {
                            Id = new Guid("b3a2d4fc-332d-4bef-9388-880e8b891edd"),
                            ColorId = new Guid("1929ac40-c469-43b9-8415-b1e135870ede"),
                            ProductId = new Guid("2b54b3fd-b9e6-486b-8fe0-9c36f99d4ec1")
                        },
                        new
                        {
                            Id = new Guid("1c60429a-3ab7-46c5-af10-cd1c85b68b71"),
                            ColorId = new Guid("e233d819-ab20-43d9-a5bf-d2f40370e42c"),
                            ProductId = new Guid("6ea3d056-9bd0-46ad-939a-03677d79282f")
                        },
                        new
                        {
                            Id = new Guid("9095f5ba-9f85-4476-b3d9-38d98063aa46"),
                            ColorId = new Guid("dbfc57d3-e295-403a-b27d-a39c2974f55b"),
                            ProductId = new Guid("6ea3d056-9bd0-46ad-939a-03677d79282f")
                        },
                        new
                        {
                            Id = new Guid("6b3ea4f4-f051-4948-9f3d-fec95c842415"),
                            ColorId = new Guid("dbfc57d3-e295-403a-b27d-a39c2974f55b"),
                            ProductId = new Guid("2043aadc-0040-4f3a-85fd-1a63acf6b25d")
                        },
                        new
                        {
                            Id = new Guid("add54b59-9020-4dc8-93a1-de7e5fef1c8d"),
                            ColorId = new Guid("8dac05f0-5f3d-4162-82ba-16156c991a4c"),
                            ProductId = new Guid("2043aadc-0040-4f3a-85fd-1a63acf6b25d")
                        },
                        new
                        {
                            Id = new Guid("8cae94a8-e4c7-4fe5-9979-3520057953be"),
                            ColorId = new Guid("74737dac-7703-44b0-9621-4a77ca248c6e"),
                            ProductId = new Guid("f8f0e63e-d665-452e-9214-a0ff58784d65")
                        },
                        new
                        {
                            Id = new Guid("1e5104cd-dc22-4a91-b2ad-4dbc93f3ad76"),
                            ColorId = new Guid("e233d819-ab20-43d9-a5bf-d2f40370e42c"),
                            ProductId = new Guid("f8f0e63e-d665-452e-9214-a0ff58784d65")
                        },
                        new
                        {
                            Id = new Guid("9cdeefb7-9730-488e-98f0-5bd53266be33"),
                            ColorId = new Guid("9d398d30-f4e6-4777-afa9-2f59f0192f2d"),
                            ProductId = new Guid("9b254a17-1c58-4510-92fb-47af6486e947")
                        },
                        new
                        {
                            Id = new Guid("ad1750e3-0a68-4a89-9b14-8441088d277e"),
                            ColorId = new Guid("4c702782-abd0-485a-a945-78ff78046618"),
                            ProductId = new Guid("9b254a17-1c58-4510-92fb-47af6486e947")
                        },
                        new
                        {
                            Id = new Guid("fef783e2-8004-4644-b894-065480904eca"),
                            ColorId = new Guid("304d8429-e16f-421b-a5eb-813d8dbf00b6"),
                            ProductId = new Guid("7ddf83f8-dc5f-4a4a-a61b-3932e4e0faa9")
                        },
                        new
                        {
                            Id = new Guid("1e9bb361-47f1-4e8e-953a-85a59ceaf9d6"),
                            ColorId = new Guid("8dac05f0-5f3d-4162-82ba-16156c991a4c"),
                            ProductId = new Guid("7ddf83f8-dc5f-4a4a-a61b-3932e4e0faa9")
                        },
                        new
                        {
                            Id = new Guid("7271bb70-7c6c-41d4-ae93-0e5f588dceb2"),
                            ColorId = new Guid("9d398d30-f4e6-4777-afa9-2f59f0192f2d"),
                            ProductId = new Guid("acc12af6-206f-4be9-9444-54204d5efc2d")
                        },
                        new
                        {
                            Id = new Guid("af76e60a-8d08-431e-b31f-5e3a67019a03"),
                            ColorId = new Guid("fc9f079b-e785-493b-b0ec-6bbdbf459e68"),
                            ProductId = new Guid("acc12af6-206f-4be9-9444-54204d5efc2d")
                        },
                        new
                        {
                            Id = new Guid("005f274f-57c3-4b79-802f-94fda79f5280"),
                            ColorId = new Guid("e233d819-ab20-43d9-a5bf-d2f40370e42c"),
                            ProductId = new Guid("602160e3-1d48-41ca-ad05-be16db6c17d0")
                        },
                        new
                        {
                            Id = new Guid("43253cb8-a021-468d-a2b8-5d7f52f6c41e"),
                            ColorId = new Guid("dbfc57d3-e295-403a-b27d-a39c2974f55b"),
                            ProductId = new Guid("602160e3-1d48-41ca-ad05-be16db6c17d0")
                        },
                        new
                        {
                            Id = new Guid("b596820e-91c9-4306-bb20-67cf240e4e6e"),
                            ColorId = new Guid("304d8429-e16f-421b-a5eb-813d8dbf00b6"),
                            ProductId = new Guid("09c61295-4094-47c2-b594-d0a689a7fc9f")
                        },
                        new
                        {
                            Id = new Guid("1fe5e728-6d3d-4b5d-ad23-4ee59a364f96"),
                            ColorId = new Guid("e233d819-ab20-43d9-a5bf-d2f40370e42c"),
                            ProductId = new Guid("09c61295-4094-47c2-b594-d0a689a7fc9f")
                        },
                        new
                        {
                            Id = new Guid("8702532f-b7f6-42d6-867f-be4555adff33"),
                            ColorId = new Guid("1929ac40-c469-43b9-8415-b1e135870ede"),
                            ProductId = new Guid("9b80d2ca-47df-4fab-8255-f29d155232a6")
                        },
                        new
                        {
                            Id = new Guid("8525067e-beda-460e-bd31-943994af8675"),
                            ColorId = new Guid("9d398d30-f4e6-4777-afa9-2f59f0192f2d"),
                            ProductId = new Guid("9b80d2ca-47df-4fab-8255-f29d155232a6")
                        },
                        new
                        {
                            Id = new Guid("096b0dda-8a37-48f9-8f53-da3dead40934"),
                            ColorId = new Guid("1929ac40-c469-43b9-8415-b1e135870ede"),
                            ProductId = new Guid("b63d6b79-26af-4ee6-9eb4-9d1c85a0eddf")
                        },
                        new
                        {
                            Id = new Guid("2a4d99d7-2d2a-4da5-aa1b-0b83db4e8830"),
                            ColorId = new Guid("e233d819-ab20-43d9-a5bf-d2f40370e42c"),
                            ProductId = new Guid("b63d6b79-26af-4ee6-9eb4-9d1c85a0eddf")
                        },
                        new
                        {
                            Id = new Guid("f787f0b3-7f2c-4ad5-a3d5-e36412c1cc8d"),
                            ColorId = new Guid("8dac05f0-5f3d-4162-82ba-16156c991a4c"),
                            ProductId = new Guid("6d7ec1b2-272a-4ca5-8181-0d6c96c7a310")
                        },
                        new
                        {
                            Id = new Guid("12cb22c3-d943-4c95-926e-c3b3322a8801"),
                            ColorId = new Guid("fc9f079b-e785-493b-b0ec-6bbdbf459e68"),
                            ProductId = new Guid("6d7ec1b2-272a-4ca5-8181-0d6c96c7a310")
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductColorId");

                    b.ToTable("ProductImage", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9a00c5b-23e4-493f-9880-e89135564f2c"),
                            IsPrimary = true,
                            ProductColorId = new Guid("4d508f67-86ce-48c7-a0ed-c575b536ada3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438090/black_1_gkqv9b.jpg"
                        },
                        new
                        {
                            Id = new Guid("173a67cd-d8ee-4fef-af7d-7583bbf58765"),
                            IsPrimary = false,
                            ProductColorId = new Guid("4d508f67-86ce-48c7-a0ed-c575b536ada3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438090/black_2_sx4vva.jpg"
                        },
                        new
                        {
                            Id = new Guid("f27f3763-64bd-44b5-a16a-c543ad962a88"),
                            IsPrimary = true,
                            ProductColorId = new Guid("b3a2d4fc-332d-4bef-9388-880e8b891edd"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438076/white_1_t5dag8.jpg"
                        },
                        new
                        {
                            Id = new Guid("437f2ed8-f764-4cc3-9338-62b025370dd3"),
                            IsPrimary = false,
                            ProductColorId = new Guid("b3a2d4fc-332d-4bef-9388-880e8b891edd"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438077/white_2_oicoau.jpg"
                        },
                        new
                        {
                            Id = new Guid("c809148a-7c04-458e-9d26-af6ca3358006"),
                            IsPrimary = true,
                            ProductColorId = new Guid("1c60429a-3ab7-46c5-af10-cd1c85b68b71"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438404/blue_1_eaakhx.jpg"
                        },
                        new
                        {
                            Id = new Guid("263994ad-9f76-4d42-b3cf-116d888e410b"),
                            IsPrimary = false,
                            ProductColorId = new Guid("1c60429a-3ab7-46c5-af10-cd1c85b68b71"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438404/blue_2_pvuo6o.jpg"
                        },
                        new
                        {
                            Id = new Guid("3441e5fd-b661-4f6b-b64b-5dff271fa8e8"),
                            IsPrimary = true,
                            ProductColorId = new Guid("9095f5ba-9f85-4476-b3d9-38d98063aa46"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438394/black_1_r9smbn.jpg"
                        },
                        new
                        {
                            Id = new Guid("4ade6cab-0578-4365-882a-374098ea3f77"),
                            IsPrimary = false,
                            ProductColorId = new Guid("9095f5ba-9f85-4476-b3d9-38d98063aa46"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438394/black_2_rhdpsy.jpg"
                        },
                        new
                        {
                            Id = new Guid("4a405a16-5595-4265-aae6-af313adc0123"),
                            IsPrimary = true,
                            ProductColorId = new Guid("6b3ea4f4-f051-4948-9f3d-fec95c842415"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439223/black_1_lbqxjg.jpg"
                        },
                        new
                        {
                            Id = new Guid("3f9c32a0-eded-4b4d-8bbc-15e446e078c1"),
                            IsPrimary = false,
                            ProductColorId = new Guid("6b3ea4f4-f051-4948-9f3d-fec95c842415"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439221/black_2_xkoq54.jpg"
                        },
                        new
                        {
                            Id = new Guid("9a797999-3493-4fbf-81b4-89f49006c46c"),
                            IsPrimary = true,
                            ProductColorId = new Guid("add54b59-9020-4dc8-93a1-de7e5fef1c8d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439221/olive_1_faf0az.jpg"
                        },
                        new
                        {
                            Id = new Guid("4643deb9-6d5f-4f5d-8efe-cec48b26d244"),
                            IsPrimary = false,
                            ProductColorId = new Guid("add54b59-9020-4dc8-93a1-de7e5fef1c8d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439222/olive_2_ovtcev.jpg"
                        },
                        new
                        {
                            Id = new Guid("5b8b907d-c1ae-416b-bc72-b264626e37d6"),
                            IsPrimary = true,
                            ProductColorId = new Guid("8cae94a8-e4c7-4fe5-9979-3520057953be"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/pink_1_v0tcxo.jpg"
                        },
                        new
                        {
                            Id = new Guid("d048a881-520a-4f1e-b58c-0a8fea419e2a"),
                            IsPrimary = false,
                            ProductColorId = new Guid("8cae94a8-e4c7-4fe5-9979-3520057953be"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/pink_2_ygzmiw.jpg"
                        },
                        new
                        {
                            Id = new Guid("c950cd04-bf4d-4355-94cd-6c9832c1f968"),
                            IsPrimary = true,
                            ProductColorId = new Guid("1e5104cd-dc22-4a91-b2ad-4dbc93f3ad76"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439524/navy_1_kkhyqa.jpg"
                        },
                        new
                        {
                            Id = new Guid("b1152550-4a9e-4de3-bed9-d7ed708cf17b"),
                            IsPrimary = false,
                            ProductColorId = new Guid("1e5104cd-dc22-4a91-b2ad-4dbc93f3ad76"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/navy_2_kolxaz.jpg"
                        },
                        new
                        {
                            Id = new Guid("378b2dd4-2dc4-4d5e-b7ad-573e39f72685"),
                            IsPrimary = true,
                            ProductColorId = new Guid("9cdeefb7-9730-488e-98f0-5bd53266be33"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439897/gray_1_lzp7go.jpg"
                        },
                        new
                        {
                            Id = new Guid("5226a666-4d99-42e5-add1-f5953770dbf5"),
                            IsPrimary = false,
                            ProductColorId = new Guid("9cdeefb7-9730-488e-98f0-5bd53266be33"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/gray_2_bzzytk.jpg"
                        },
                        new
                        {
                            Id = new Guid("0df9d525-2504-465b-b0bb-ad49fdc7eb28"),
                            IsPrimary = true,
                            ProductColorId = new Guid("ad1750e3-0a68-4a89-9b14-8441088d277e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/wine_1_zht2re.jpg"
                        },
                        new
                        {
                            Id = new Guid("740e6e84-0dd1-4d25-bd90-6c0e9ac637f8"),
                            IsPrimary = false,
                            ProductColorId = new Guid("ad1750e3-0a68-4a89-9b14-8441088d277e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/wine_2_oohqly.jpg"
                        },
                        new
                        {
                            Id = new Guid("046bcc5c-7ed3-45d7-9f7d-ed38a3bec93b"),
                            IsPrimary = true,
                            ProductColorId = new Guid("fef783e2-8004-4644-b894-065480904eca"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/brown_1_h2bauh.jpg"
                        },
                        new
                        {
                            Id = new Guid("9ba5a60f-011c-43eb-a339-c1a4c1835491"),
                            IsPrimary = false,
                            ProductColorId = new Guid("fef783e2-8004-4644-b894-065480904eca"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/brown_2_vj3zqp.jpg"
                        },
                        new
                        {
                            Id = new Guid("84f5d10e-8405-4c11-8776-6474705e61d0"),
                            IsPrimary = true,
                            ProductColorId = new Guid("1e9bb361-47f1-4e8e-953a-85a59ceaf9d6"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/green_1_pwrndf.jpg"
                        },
                        new
                        {
                            Id = new Guid("d90eac65-9966-4553-a0d8-6108f04abfe0"),
                            IsPrimary = false,
                            ProductColorId = new Guid("1e9bb361-47f1-4e8e-953a-85a59ceaf9d6"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439960/green_2_kf2ll7.jpg"
                        },
                        new
                        {
                            Id = new Guid("8e084824-e119-4399-b098-7fb926171c8f"),
                            IsPrimary = true,
                            ProductColorId = new Guid("7271bb70-7c6c-41d4-ae93-0e5f588dceb2"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/light-gray_1_uyfeh7.jpg"
                        },
                        new
                        {
                            Id = new Guid("f9c95af3-92e8-46d1-abd4-9ddd26414067"),
                            IsPrimary = false,
                            ProductColorId = new Guid("7271bb70-7c6c-41d4-ae93-0e5f588dceb2"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440135/light-gray_2_hpszuf.jpg"
                        },
                        new
                        {
                            Id = new Guid("4b3388e9-13b6-4f87-9e30-79faf711c9f2"),
                            IsPrimary = true,
                            ProductColorId = new Guid("af76e60a-8d08-431e-b31f-5e3a67019a03"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/natural_1_zmlakv.jpg"
                        },
                        new
                        {
                            Id = new Guid("44b18950-907b-45ff-97d2-af47615eead4"),
                            IsPrimary = false,
                            ProductColorId = new Guid("af76e60a-8d08-431e-b31f-5e3a67019a03"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/natural_2_dfpfn5.jpg"
                        },
                        new
                        {
                            Id = new Guid("77b9b78e-b74a-423b-a658-223be9edb675"),
                            IsPrimary = true,
                            ProductColorId = new Guid("005f274f-57c3-4b79-802f-94fda79f5280"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440195/blue_1_hwruph.jpg"
                        },
                        new
                        {
                            Id = new Guid("3876b766-f575-4920-bcbb-9ede29e9eac4"),
                            IsPrimary = false,
                            ProductColorId = new Guid("005f274f-57c3-4b79-802f-94fda79f5280"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440196/blue_2_ioyjmd.jpg"
                        },
                        new
                        {
                            Id = new Guid("3fc92cd3-72d3-40ef-aaf0-0e8cff404afe"),
                            IsPrimary = true,
                            ProductColorId = new Guid("43253cb8-a021-468d-a2b8-5d7f52f6c41e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440193/black_1_mvzenu.jpg"
                        },
                        new
                        {
                            Id = new Guid("4c5931be-75b3-460d-84d6-07774796b2c8"),
                            IsPrimary = false,
                            ProductColorId = new Guid("43253cb8-a021-468d-a2b8-5d7f52f6c41e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440194/black_2_yptvzh.jpg"
                        },
                        new
                        {
                            Id = new Guid("845e7b48-0dd9-48bf-8aa8-3644ce37f892"),
                            IsPrimary = true,
                            ProductColorId = new Guid("b596820e-91c9-4306-bb20-67cf240e4e6e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440253/brown_1_gmlsf5.jpg"
                        },
                        new
                        {
                            Id = new Guid("8ddaf80c-ec4c-4bb2-8739-9f3d5c060f4e"),
                            IsPrimary = false,
                            ProductColorId = new Guid("b596820e-91c9-4306-bb20-67cf240e4e6e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440251/brown_2_zqkgfj.jpg"
                        },
                        new
                        {
                            Id = new Guid("62c6f230-feef-49f1-80f6-793a8831626b"),
                            IsPrimary = true,
                            ProductColorId = new Guid("1fe5e728-6d3d-4b5d-ad23-4ee59a364f96"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440252/navy_1_aewdgs.jpg"
                        },
                        new
                        {
                            Id = new Guid("efcafc54-633e-4607-8ceb-f74f61b97f77"),
                            IsPrimary = false,
                            ProductColorId = new Guid("1fe5e728-6d3d-4b5d-ad23-4ee59a364f96"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440253/navy_2_sybyag.jpg"
                        },
                        new
                        {
                            Id = new Guid("89f53c3e-5bc9-4b8d-8936-51d7c9f2e920"),
                            IsPrimary = true,
                            ProductColorId = new Guid("8702532f-b7f6-42d6-867f-be4555adff33"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440317/white_1_lppqmp.jpg"
                        },
                        new
                        {
                            Id = new Guid("bd05fa18-cf05-4569-b93f-83828a54a906"),
                            IsPrimary = false,
                            ProductColorId = new Guid("8702532f-b7f6-42d6-867f-be4555adff33"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440318/white_2_opuzjo.jpg"
                        },
                        new
                        {
                            Id = new Guid("e77a0980-f5df-4841-a261-064b2a899a0c"),
                            IsPrimary = true,
                            ProductColorId = new Guid("8525067e-beda-460e-bd31-943994af8675"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440315/gray_1_eurozu.jpg"
                        },
                        new
                        {
                            Id = new Guid("5e95f910-acac-4476-868b-ff83e8053042"),
                            IsPrimary = false,
                            ProductColorId = new Guid("8525067e-beda-460e-bd31-943994af8675"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440316/gray_2_gif5gy.jpg"
                        },
                        new
                        {
                            Id = new Guid("a86ab141-ade7-404e-b00c-6ac93921b476"),
                            IsPrimary = true,
                            ProductColorId = new Guid("096b0dda-8a37-48f9-8f53-da3dead40934"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440403/white_1_nd5suu.jpg"
                        },
                        new
                        {
                            Id = new Guid("c0f93587-675c-4a1d-95e7-3937ae642447"),
                            IsPrimary = false,
                            ProductColorId = new Guid("096b0dda-8a37-48f9-8f53-da3dead40934"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440406/white_2_mbd76x.jpg"
                        },
                        new
                        {
                            Id = new Guid("35f91afd-f254-4100-b831-7bb58a0c3a9a"),
                            IsPrimary = true,
                            ProductColorId = new Guid("2a4d99d7-2d2a-4da5-aa1b-0b83db4e8830"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440401/navy_1_vrk8fm.jpg"
                        },
                        new
                        {
                            Id = new Guid("d379486a-e5de-45f4-abc9-d2972526d8ac"),
                            IsPrimary = false,
                            ProductColorId = new Guid("2a4d99d7-2d2a-4da5-aa1b-0b83db4e8830"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440402/navy_2_vgb74l.jpg"
                        },
                        new
                        {
                            Id = new Guid("b7e0090a-fb06-4eae-8ebc-c6751c67d9e3"),
                            IsPrimary = true,
                            ProductColorId = new Guid("f787f0b3-7f2c-4ad5-a3d5-e36412c1cc8d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440458/olive_1_uixjsd.jpg"
                        },
                        new
                        {
                            Id = new Guid("9e5a7a9f-b5a8-44fc-ae7a-dfcfa0192216"),
                            IsPrimary = false,
                            ProductColorId = new Guid("f787f0b3-7f2c-4ad5-a3d5-e36412c1cc8d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440460/olive_2_q9e65h.jpg"
                        },
                        new
                        {
                            Id = new Guid("4ba0e633-a93f-42c3-a58e-4462cc65a931"),
                            IsPrimary = true,
                            ProductColorId = new Guid("12cb22c3-d943-4c95-926e-c3b3322a8801"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440456/beige_1_xaltqx.jpg"
                        },
                        new
                        {
                            Id = new Guid("b812f0a4-6f14-4d41-a818-7e1023d17baa"),
                            IsPrimary = false,
                            ProductColorId = new Guid("12cb22c3-d943-4c95-926e-c3b3322a8801"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440456/beige_2_xf8iqr.jpg"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("18953569-5d03-47d8-b9ea-b12144f8ff65"),
                            CategoryId = new Guid("f39163f3-fb6e-4efe-9c51-ab56525a57ad"),
                            Name = "Áo thun"
                        },
                        new
                        {
                            Id = new Guid("7486749d-38ab-42c6-ae7c-f516ae42df14"),
                            CategoryId = new Guid("f39163f3-fb6e-4efe-9c51-ab56525a57ad"),
                            Name = "Áo polo"
                        },
                        new
                        {
                            Id = new Guid("a2b43af4-b402-428b-af2e-98402129708c"),
                            CategoryId = new Guid("f39163f3-fb6e-4efe-9c51-ab56525a57ad"),
                            Name = "Áo sơ mi"
                        },
                        new
                        {
                            Id = new Guid("ffb58b18-e103-48df-b4c4-cc9fef026d05"),
                            CategoryId = new Guid("e60de07f-6df6-4cde-b2ff-d5d0b3790e1e"),
                            Name = "Quần Short"
                        },
                        new
                        {
                            Id = new Guid("e152445e-ef3c-46c3-b7fb-baaf525e1f54"),
                            CategoryId = new Guid("e60de07f-6df6-4cde-b2ff-d5d0b3790e1e"),
                            Name = "Quần Jeans"
                        },
                        new
                        {
                            Id = new Guid("8c8fb1ca-c33f-491b-a1b1-3d7f0146b503"),
                            CategoryId = new Guid("e60de07f-6df6-4cde-b2ff-d5d0b3790e1e"),
                            Name = "Quần Tây"
                        },
                        new
                        {
                            Id = new Guid("3b166fac-7774-40b4-b125-6d8ee1d6e377"),
                            CategoryId = new Guid("ab709163-8d52-4b0f-a057-756860ea59b0"),
                            Name = "Mũ & Mũ lưỡi trai"
                        },
                        new
                        {
                            Id = new Guid("7359214a-e494-4266-bcea-ae2bb615ccb0"),
                            CategoryId = new Guid("ab709163-8d52-4b0f-a057-756860ea59b0"),
                            Name = "Kính mát"
                        },
                        new
                        {
                            Id = new Guid("fd2bb03f-63ca-4b47-aa8d-4d61d24922a7"),
                            CategoryId = new Guid("ab709163-8d52-4b0f-a057-756860ea59b0"),
                            Name = "Túi"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd82ed85-b897-4800-8fc0-decfbccd7572"),
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("ef132677-9929-4c30-bde5-afeb0339304a"),
                            Name = "L"
                        },
                        new
                        {
                            Id = new Guid("f074ed7d-0916-4e34-abd9-efe5509887db"),
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("ffe619d4-e784-4523-9a05-881fd91b1fe0"),
                            Name = "2XL"
                        },
                        new
                        {
                            Id = new Guid("8a867af7-9e6d-433e-bb40-c35cbe8b6658"),
                            Name = "3XL"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique()
                        .HasFilter("[CartId] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "9b021dab-e578-4f1e-b950-3c879b260f59",
                            AccessFailedCount = 0,
                            Address = "123 Admin St",
                            ConcurrencyStamp = "e025364f-339a-42f4-be55-59faae26fa8f",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "EC",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGTpN4CYajA0dYdgIMGSnBRBgqYX9RN1/BPAF1l08BmULgnnxYGkU4LzHnjHLZBx9A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "926508d7-3d3c-464c-895c-cd2ee385ebf8",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8d4d3064-ec2f-4a78-955b-135755d30e32",
                            ConcurrencyStamp = "01c36965-6bea-4ace-8aaa-9ee8c00ef6c0",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "b45b157f-5066-4893-a7c2-f8b16d3fa9f1",
                            ConcurrencyStamp = "c54ad79c-7c9f-4827-a570-718b373100da",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "9b021dab-e578-4f1e-b950-3c879b260f59",
                            RoleId = "8d4d3064-ec2f-4a78-955b-135755d30e32"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.HasOne("EverythingSucks.Models.CartStatus", "CartStatus")
                        .WithMany("Carts")
                        .HasForeignKey("CartStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CartStatus");
                });

            modelBuilder.Entity("EverythingSucks.Models.CartItem", b =>
                {
                    b.HasOne("EverythingSucks.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Cart");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EverythingSucks.Models.Favorite", b =>
                {
                    b.HasOne("EverythingSucks.Models.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.HasOne("EverythingSucks.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EverythingSucks.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderItem", b =>
                {
                    b.HasOne("EverythingSucks.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Order");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.HasOne("EverythingSucks.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.HasOne("EverythingSucks.Models.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductImage", b =>
                {
                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.HasOne("EverythingSucks.Models.Category", "Category")
                        .WithMany("ProductTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.HasOne("EverythingSucks.Models.Cart", "Cart")
                        .WithOne("User")
                        .HasForeignKey("EverythingSucks.Models.User", "CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.CartStatus", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("EverythingSucks.Models.Category", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("EverythingSucks.Models.Color", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
