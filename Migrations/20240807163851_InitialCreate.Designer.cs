// <auto-generated />
using System;
using EverythingSucks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EverythingSucks.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240807163851_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartStatusId");

                    b.ToTable("Cart", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a88704d-1fb1-41e9-b24b-0bb1ee011326"),
                            UserId = "32c944b9-669b-4bd7-ab4b-7a06829d9d84"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.CartStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CartStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("03ff6de0-5b56-4983-bc77-d6ad9aa3f754"),
                            Name = "Có hàng"
                        },
                        new
                        {
                            Id = new Guid("2ad7231a-e37c-4c60-a6ff-11b4fac52394"),
                            Name = "Trống"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8488ca15-ef5c-4e33-bffe-a5d1cb5b3946"),
                            Name = "Áo"
                        },
                        new
                        {
                            Id = new Guid("01af2e2f-f779-46ae-af72-64717834d068"),
                            Name = "Quần"
                        },
                        new
                        {
                            Id = new Guid("3bf2fb8d-f7b5-409a-9eb8-1ae92a2e644d"),
                            Name = "Phụ kiện"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e6bcca3-4c9a-4b98-99c1-58bceecfe0cc"),
                            ColorCode = "#FFFFFF",
                            Name = "White"
                        },
                        new
                        {
                            Id = new Guid("250afb4b-b7a7-4506-9285-c1c53fa3ddab"),
                            ColorCode = "#DEDEDE",
                            Name = "Grey"
                        },
                        new
                        {
                            Id = new Guid("055c1aa9-77ab-485c-9560-fc4860049b28"),
                            ColorCode = "#3D3D3D",
                            Name = "Black"
                        },
                        new
                        {
                            Id = new Guid("3df410ec-626c-4ffa-862b-4cc7046b944a"),
                            ColorCode = "#F5C0C9",
                            Name = "Pink"
                        },
                        new
                        {
                            Id = new Guid("944f67e8-09d1-4e1a-ade1-e9956766e319"),
                            ColorCode = "#EB3417",
                            Name = "Red"
                        },
                        new
                        {
                            Id = new Guid("b53ebd36-d127-4758-b3ea-00296ee34f22"),
                            ColorCode = "#F3A72C",
                            Name = "Orange"
                        },
                        new
                        {
                            Id = new Guid("5c9896d1-4166-4b78-a624-d8dbd045b0e7"),
                            ColorCode = "#EFEBD4",
                            Name = "Beige"
                        },
                        new
                        {
                            Id = new Guid("b1d159f9-76f1-4dc9-9ff2-be47b7c45278"),
                            ColorCode = "#714E36",
                            Name = "Brown"
                        },
                        new
                        {
                            Id = new Guid("a4f85071-938b-42de-b93a-f5bb744e7932"),
                            ColorCode = "#FFFF3F",
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("4819410f-6be8-4275-a6d7-b59afbd0cd50"),
                            ColorCode = "#387D1F",
                            Name = "Green"
                        },
                        new
                        {
                            Id = new Guid("78eff946-06d0-4a8e-bcbf-d710ddc44dad"),
                            ColorCode = "#0003F9",
                            Name = "Blue"
                        },
                        new
                        {
                            Id = new Guid("37f88607-bd03-4ce7-9e07-b2a056d6a5be"),
                            ColorCode = "#741A7C",
                            Name = "Purple"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Favorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FavoriteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4dcd64cc-8379-46e0-a32d-fd0e74a895ce"),
                            Name = "Đang chờ xác nhận"
                        },
                        new
                        {
                            Id = new Guid("60fde9c1-2f33-4271-a2ba-88206ea622aa"),
                            Name = "Xác nhận"
                        },
                        new
                        {
                            Id = new Guid("df387df4-52f9-45ea-a8e2-26764bb09fbf"),
                            Name = "Chờ giao hàng"
                        },
                        new
                        {
                            Id = new Guid("4b70283d-5ce2-4c1f-b093-18e7122de806"),
                            Name = "Đã giao"
                        },
                        new
                        {
                            Id = new Guid("18238cc0-2df7-42ff-8e5f-3fb33505f08b"),
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("76884c0d-4eee-4afd-a1e5-c6310dfcfb40"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4855),
                            Description = "Bộ sưu tập U từ thương hiệu Uniqlo là kết tinh sáng tạo của đội ngũ thiết kế quốc tế tận tâm và tài năng đến từ Trung tâm Nghiên cứu và Phát triển Paris, dưới sự dẫn dắt của Giám đốc Nghệ thuật Christophe Lemaire.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Dáng Rộng Tay Lỡ",
                            Price = 391000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4867)
                        },
                        new
                        {
                            Id = new Guid("93d3bb8f-befc-4ffa-a324-80e2a15e45ea"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4870),
                            Description = "Vải 'DRY-EX' nhanh chóng hấp thụ và hút ẩm để giữ cho làn da của bạn cảm giác tươi mát.",
                            IsDeleted = false,
                            Name = "DRY-EX Áo Thun Cổ Tròn",
                            Price = 391000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4870)
                        },
                        new
                        {
                            Id = new Guid("12439ae3-a55e-4050-bf5d-efe7dbb4be6c"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4872),
                            Description = "Chất liệu 100% cotton bền chắc, cổ áo được làm bằng vải mềm, thiết kế giản dị lấy cảm hứng từ áo bóng bầu dục cổ điển.",
                            IsDeleted = false,
                            Name = "Áo Thun Vải Cotton Cổ Henley Ngắn Tay",
                            Price = 489000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4872)
                        },
                        new
                        {
                            Id = new Guid("bb59c0b0-ed31-42d9-a40c-0f95e08efb8f"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4874),
                            Description = "Chất liệu 100% cotton cực dày dặn, cảm giác sắc nét, mịn màng, được giặt trước một lần nước để có phong cách hoàn toàn giản dị.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Kẻ Sọc Cổ Tròn Tay Lỡ",
                            Price = 391000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4874)
                        },
                        new
                        {
                            Id = new Guid("08039caf-5a2d-43ec-8ad1-d66388053434"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4877),
                            Description = "100% cotton SUPIMA® cao cấp, mịn màng, thiết kế cơ bản phù hợp tạo kiểu với nhiều phong cách khác nhau từ đơn giản đến layer, được thiết kế tỉ mỉ đến từng chi tiết, từ chiều rộng cổ áo đến đường may.",
                            IsDeleted = false,
                            Name = "Áo Thun Supima Cotton Cổ Tròn Ngắn Tay",
                            Price = 391000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4878)
                        },
                        new
                        {
                            Id = new Guid("916fca40-92eb-4e8e-b377-f1170316b32e"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4880),
                            Description = "Cảm giác giản dị của cotton, lớp lót polyester Với công nghệ DRY khô nhanh, thiết kế cơ bản mà bạn có thể tự tạo phong cách riêng hoặc theo Kiểu layer.",
                            IsDeleted = false,
                            Name = "Áo Thun Dry Cổ Tròn Nhiều Màu",
                            Price = 146000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4880)
                        },
                        new
                        {
                            Id = new Guid("daab0e88-09c2-47fe-8c2b-8ffcfe6b7563"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4882),
                            Description = "Chất liệu vải jersey 100% cotton dày dặn, mang lại cảm giác tươi mát, vải jersey khô được dệt nhỏ gọn có độ bền cao và có đặc tính sau mỗi lần giặt, buộc dây ở cổ áo giúp giữ nguyên kiểu dáng đường viền cổ áo.",
                            IsDeleted = false,
                            Name = "Áo Thun Cổ Tròn Ngắn Tay",
                            Price = 293000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4882)
                        },
                        new
                        {
                            Id = new Guid("33daddd3-18a8-4189-9bd6-1c8c630549ae"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4884),
                            Description = "Một phiên bản mới của chiếc áo thun cổ tròn vải waffle nay đã có mặt, được thiết kế với kiểu dáng đơn giản, không có túi ở phần trước ngực, cải tiến với đường may thẳng cùng kiểu dáng xẻ tà, dễ dàng mặc cho mọi dịp.",
                            IsDeleted = false,
                            Name = "Áo Thun Vải Waffle Dài Tay",
                            Price = 391000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4884)
                        },
                        new
                        {
                            Id = new Guid("877d7d6e-e9b8-4eea-99fd-85c63ff0d2ca"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4886),
                            Description = "Vải 'AIRism' mịn màng trông như cotton, cổ tròn hẹp mang lại vẻ ngoài bóng bẩy, vai trễ và tay áo dài đến một nửa rộng rãi, chất liệu vải tạo dáng tôn dáng.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Dáng Rộng",
                            Price = 391000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4886)
                        },
                        new
                        {
                            Id = new Guid("45ac6e73-c401-4b7c-bf24-3a53388ee3f8"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4887),
                            Description = "Chất vải 'AIRism' mịn màng trông như cotton, Với công nghệ DRY khô nhanh, chất liệu vải sắc nét tạo nên kiểu dáng đẹp mắt.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Không Tay",
                            Price = 293000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4888)
                        },
                        new
                        {
                            Id = new Guid("83005e52-71cd-422e-ab5b-5129b30d16cd"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4889),
                            Description = "Phần thân được làm từ chất liệu 100% cotton cực dày dặn, cảm giác khá sắc nét, mịn màng, giữ nguyên hình dạng sau khi giặt.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Tay Lỡ (Ringer)",
                            Price = 293000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4890)
                        },
                        new
                        {
                            Id = new Guid("ad86c66a-93e0-432a-9a18-12b1491af89b"),
                            CreatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4891),
                            Description = "Chất liệu 100% cotton dày dặn hoàn hảo, cảm giác sắc nét, mịn màng, giữ nguyên hình dạng sau khi giặt.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Tay Lỡ (Raglan)",
                            Price = 293000m,
                            ProductTypeId = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            UpdatedAt = new DateTime(2024, 8, 7, 23, 38, 49, 765, DateTimeKind.Local).AddTicks(4891)
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProdductColor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("99b85730-83bd-4700-8b7b-0f7cb010cbf0"),
                            ColorId = new Guid("055c1aa9-77ab-485c-9560-fc4860049b28"),
                            ProductId = new Guid("76884c0d-4eee-4afd-a1e5-c6310dfcfb40")
                        },
                        new
                        {
                            Id = new Guid("813ed004-2277-4c73-8bd5-ea1e273cee62"),
                            ColorId = new Guid("1e6bcca3-4c9a-4b98-99c1-58bceecfe0cc"),
                            ProductId = new Guid("76884c0d-4eee-4afd-a1e5-c6310dfcfb40")
                        },
                        new
                        {
                            Id = new Guid("98b00074-701a-4e71-9a9f-f5350e9edaea"),
                            ColorId = new Guid("78eff946-06d0-4a8e-bcbf-d710ddc44dad"),
                            ProductId = new Guid("93d3bb8f-befc-4ffa-a324-80e2a15e45ea")
                        },
                        new
                        {
                            Id = new Guid("ce36bfdc-94d3-4464-9235-a232311cccfc"),
                            ColorId = new Guid("055c1aa9-77ab-485c-9560-fc4860049b28"),
                            ProductId = new Guid("93d3bb8f-befc-4ffa-a324-80e2a15e45ea")
                        },
                        new
                        {
                            Id = new Guid("d29b9213-3169-4b2d-8bbf-52834e4f3ca4"),
                            ColorId = new Guid("055c1aa9-77ab-485c-9560-fc4860049b28"),
                            ProductId = new Guid("12439ae3-a55e-4050-bf5d-efe7dbb4be6c")
                        },
                        new
                        {
                            Id = new Guid("27f6cbcc-b625-4de7-8b5a-1016551ecdb5"),
                            ColorId = new Guid("4819410f-6be8-4275-a6d7-b59afbd0cd50"),
                            ProductId = new Guid("12439ae3-a55e-4050-bf5d-efe7dbb4be6c")
                        },
                        new
                        {
                            Id = new Guid("91427255-9f79-4eb9-b77b-eefdcebfff77"),
                            ColorId = new Guid("3df410ec-626c-4ffa-862b-4cc7046b944a"),
                            ProductId = new Guid("bb59c0b0-ed31-42d9-a40c-0f95e08efb8f")
                        },
                        new
                        {
                            Id = new Guid("9fcd53b2-464d-4614-be17-c8191337f54f"),
                            ColorId = new Guid("78eff946-06d0-4a8e-bcbf-d710ddc44dad"),
                            ProductId = new Guid("bb59c0b0-ed31-42d9-a40c-0f95e08efb8f")
                        },
                        new
                        {
                            Id = new Guid("61203d6a-654f-4f84-a193-8ac16fc14d46"),
                            ColorId = new Guid("250afb4b-b7a7-4506-9285-c1c53fa3ddab"),
                            ProductId = new Guid("08039caf-5a2d-43ec-8ad1-d66388053434")
                        },
                        new
                        {
                            Id = new Guid("3e50ab98-3dbf-4fcd-9963-c1fa59a8d782"),
                            ColorId = new Guid("944f67e8-09d1-4e1a-ade1-e9956766e319"),
                            ProductId = new Guid("08039caf-5a2d-43ec-8ad1-d66388053434")
                        },
                        new
                        {
                            Id = new Guid("155fafd4-541b-4716-ac34-609553e1e07a"),
                            ColorId = new Guid("b1d159f9-76f1-4dc9-9ff2-be47b7c45278"),
                            ProductId = new Guid("916fca40-92eb-4e8e-b377-f1170316b32e")
                        },
                        new
                        {
                            Id = new Guid("8aa01376-6057-4ecb-ae2a-5be214ddcae6"),
                            ColorId = new Guid("4819410f-6be8-4275-a6d7-b59afbd0cd50"),
                            ProductId = new Guid("916fca40-92eb-4e8e-b377-f1170316b32e")
                        },
                        new
                        {
                            Id = new Guid("88cf17db-ff65-4ca1-9aff-edc7943abddf"),
                            ColorId = new Guid("250afb4b-b7a7-4506-9285-c1c53fa3ddab"),
                            ProductId = new Guid("daab0e88-09c2-47fe-8c2b-8ffcfe6b7563")
                        },
                        new
                        {
                            Id = new Guid("6ef5bc54-127b-4c64-9eeb-bda6e98efee0"),
                            ColorId = new Guid("5c9896d1-4166-4b78-a624-d8dbd045b0e7"),
                            ProductId = new Guid("daab0e88-09c2-47fe-8c2b-8ffcfe6b7563")
                        },
                        new
                        {
                            Id = new Guid("c391e26b-aaee-4038-9aa4-358c27ffcd8a"),
                            ColorId = new Guid("78eff946-06d0-4a8e-bcbf-d710ddc44dad"),
                            ProductId = new Guid("33daddd3-18a8-4189-9bd6-1c8c630549ae")
                        },
                        new
                        {
                            Id = new Guid("5300edec-f24d-43c9-98ac-ece6f8162972"),
                            ColorId = new Guid("055c1aa9-77ab-485c-9560-fc4860049b28"),
                            ProductId = new Guid("33daddd3-18a8-4189-9bd6-1c8c630549ae")
                        },
                        new
                        {
                            Id = new Guid("52afd94c-134f-40eb-b199-b8be04285dc1"),
                            ColorId = new Guid("b1d159f9-76f1-4dc9-9ff2-be47b7c45278"),
                            ProductId = new Guid("877d7d6e-e9b8-4eea-99fd-85c63ff0d2ca")
                        },
                        new
                        {
                            Id = new Guid("1db07e2d-dc3a-4b77-8625-9701d71d6b22"),
                            ColorId = new Guid("78eff946-06d0-4a8e-bcbf-d710ddc44dad"),
                            ProductId = new Guid("877d7d6e-e9b8-4eea-99fd-85c63ff0d2ca")
                        },
                        new
                        {
                            Id = new Guid("d0c3fa8a-8c14-4e81-ad69-5273d8dc57bb"),
                            ColorId = new Guid("1e6bcca3-4c9a-4b98-99c1-58bceecfe0cc"),
                            ProductId = new Guid("45ac6e73-c401-4b7c-bf24-3a53388ee3f8")
                        },
                        new
                        {
                            Id = new Guid("b116a223-432a-4aff-bd15-9390abb7bfbc"),
                            ColorId = new Guid("250afb4b-b7a7-4506-9285-c1c53fa3ddab"),
                            ProductId = new Guid("45ac6e73-c401-4b7c-bf24-3a53388ee3f8")
                        },
                        new
                        {
                            Id = new Guid("6b82f7f9-0614-4352-a900-41887b213bc3"),
                            ColorId = new Guid("1e6bcca3-4c9a-4b98-99c1-58bceecfe0cc"),
                            ProductId = new Guid("83005e52-71cd-422e-ab5b-5129b30d16cd")
                        },
                        new
                        {
                            Id = new Guid("0d7bafff-9962-414e-85d8-9c80221d3e85"),
                            ColorId = new Guid("78eff946-06d0-4a8e-bcbf-d710ddc44dad"),
                            ProductId = new Guid("83005e52-71cd-422e-ab5b-5129b30d16cd")
                        },
                        new
                        {
                            Id = new Guid("619021b8-532e-4a1b-87f7-38571fcd269a"),
                            ColorId = new Guid("4819410f-6be8-4275-a6d7-b59afbd0cd50"),
                            ProductId = new Guid("ad86c66a-93e0-432a-9a18-12b1491af89b")
                        },
                        new
                        {
                            Id = new Guid("ac4b09da-bf4c-42f4-824f-bc16e81aa413"),
                            ColorId = new Guid("5c9896d1-4166-4b78-a624-d8dbd045b0e7"),
                            ProductId = new Guid("ad86c66a-93e0-432a-9a18-12b1491af89b")
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductColorId");

                    b.ToTable("ProductImage", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f2b380c-b7ca-4841-96d7-e73aef6786bd"),
                            IsPrimary = true,
                            ProductColorId = new Guid("99b85730-83bd-4700-8b7b-0f7cb010cbf0"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438090/black_1_gkqv9b.jpg"
                        },
                        new
                        {
                            Id = new Guid("42b4d277-f7c5-4152-a568-79ec56fed1af"),
                            IsPrimary = false,
                            ProductColorId = new Guid("99b85730-83bd-4700-8b7b-0f7cb010cbf0"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438090/black_2_sx4vva.jpg"
                        },
                        new
                        {
                            Id = new Guid("a574ed50-0219-4318-a235-15f1f5eabcbf"),
                            IsPrimary = true,
                            ProductColorId = new Guid("813ed004-2277-4c73-8bd5-ea1e273cee62"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438076/white_1_t5dag8.jpg"
                        },
                        new
                        {
                            Id = new Guid("09792728-30fc-43de-8589-87948bdf0dc1"),
                            IsPrimary = false,
                            ProductColorId = new Guid("813ed004-2277-4c73-8bd5-ea1e273cee62"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438077/white_2_oicoau.jpg"
                        },
                        new
                        {
                            Id = new Guid("49ee70b6-a427-40dd-bcaf-eee51ba5d4a3"),
                            IsPrimary = true,
                            ProductColorId = new Guid("98b00074-701a-4e71-9a9f-f5350e9edaea"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438404/blue_1_eaakhx.jpg"
                        },
                        new
                        {
                            Id = new Guid("04fee30f-f915-4556-9ec7-603fc9165ed3"),
                            IsPrimary = false,
                            ProductColorId = new Guid("98b00074-701a-4e71-9a9f-f5350e9edaea"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438404/blue_2_pvuo6o.jpg"
                        },
                        new
                        {
                            Id = new Guid("2b3d60e9-5c29-4e94-b0df-e403c58e78e5"),
                            IsPrimary = true,
                            ProductColorId = new Guid("ce36bfdc-94d3-4464-9235-a232311cccfc"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438394/black_1_r9smbn.jpg"
                        },
                        new
                        {
                            Id = new Guid("bc684a31-a317-407a-9234-df1ae3f1a0db"),
                            IsPrimary = false,
                            ProductColorId = new Guid("ce36bfdc-94d3-4464-9235-a232311cccfc"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438394/black_2_rhdpsy.jpg"
                        },
                        new
                        {
                            Id = new Guid("ec0df6e8-33cd-4586-bf76-397acb8b7c17"),
                            IsPrimary = true,
                            ProductColorId = new Guid("d29b9213-3169-4b2d-8bbf-52834e4f3ca4"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439223/black_1_lbqxjg.jpg"
                        },
                        new
                        {
                            Id = new Guid("2929f829-a674-4e6b-a0ee-1ed7acdb24fd"),
                            IsPrimary = false,
                            ProductColorId = new Guid("d29b9213-3169-4b2d-8bbf-52834e4f3ca4"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439221/black_2_xkoq54.jpg"
                        },
                        new
                        {
                            Id = new Guid("644fe614-8318-44b3-912f-17dcb2445bdb"),
                            IsPrimary = true,
                            ProductColorId = new Guid("27f6cbcc-b625-4de7-8b5a-1016551ecdb5"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439221/olive_1_faf0az.jpg"
                        },
                        new
                        {
                            Id = new Guid("e33ba492-8488-4426-9261-5ee01e8f875b"),
                            IsPrimary = false,
                            ProductColorId = new Guid("27f6cbcc-b625-4de7-8b5a-1016551ecdb5"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439222/olive_2_ovtcev.jpg"
                        },
                        new
                        {
                            Id = new Guid("3d7b1f3f-6c50-44df-9232-dee9d90663d8"),
                            IsPrimary = true,
                            ProductColorId = new Guid("91427255-9f79-4eb9-b77b-eefdcebfff77"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/pink_1_v0tcxo.jpg"
                        },
                        new
                        {
                            Id = new Guid("fdfb14bb-9825-46cb-a711-5a72f30394f4"),
                            IsPrimary = false,
                            ProductColorId = new Guid("91427255-9f79-4eb9-b77b-eefdcebfff77"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/pink_2_ygzmiw.jpg"
                        },
                        new
                        {
                            Id = new Guid("d12325cf-55ce-4421-8331-92b6be644860"),
                            IsPrimary = true,
                            ProductColorId = new Guid("9fcd53b2-464d-4614-be17-c8191337f54f"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439524/navy_1_kkhyqa.jpg"
                        },
                        new
                        {
                            Id = new Guid("6dc50e23-b0f3-4a11-a8cb-383cf0c2e278"),
                            IsPrimary = false,
                            ProductColorId = new Guid("9fcd53b2-464d-4614-be17-c8191337f54f"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/navy_2_kolxaz.jpg"
                        },
                        new
                        {
                            Id = new Guid("d9efba2f-bad6-42ba-8720-ff4c7b8effc8"),
                            IsPrimary = true,
                            ProductColorId = new Guid("61203d6a-654f-4f84-a193-8ac16fc14d46"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439897/gray_1_lzp7go.jpg"
                        },
                        new
                        {
                            Id = new Guid("cae8ba9f-2517-425d-92ec-f2acdd9e7297"),
                            IsPrimary = false,
                            ProductColorId = new Guid("61203d6a-654f-4f84-a193-8ac16fc14d46"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/gray_2_bzzytk.jpg"
                        },
                        new
                        {
                            Id = new Guid("1e58c4cc-a69a-4c8a-a7aa-0effc9db9ebd"),
                            IsPrimary = true,
                            ProductColorId = new Guid("3e50ab98-3dbf-4fcd-9963-c1fa59a8d782"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/wine_1_zht2re.jpg"
                        },
                        new
                        {
                            Id = new Guid("91adb552-3850-4bab-94d1-fd193d48edc3"),
                            IsPrimary = false,
                            ProductColorId = new Guid("3e50ab98-3dbf-4fcd-9963-c1fa59a8d782"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/wine_2_oohqly.jpg"
                        },
                        new
                        {
                            Id = new Guid("38bdf142-0f63-4c9c-87e7-28c4881fb775"),
                            IsPrimary = true,
                            ProductColorId = new Guid("155fafd4-541b-4716-ac34-609553e1e07a"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/brown_1_h2bauh.jpg"
                        },
                        new
                        {
                            Id = new Guid("1eb36129-fada-498b-9c0a-14fa1864a24b"),
                            IsPrimary = false,
                            ProductColorId = new Guid("155fafd4-541b-4716-ac34-609553e1e07a"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/brown_2_vj3zqp.jpg"
                        },
                        new
                        {
                            Id = new Guid("3a20cab8-866d-4538-86f1-84eb4e395ebd"),
                            IsPrimary = true,
                            ProductColorId = new Guid("8aa01376-6057-4ecb-ae2a-5be214ddcae6"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/green_1_pwrndf.jpg"
                        },
                        new
                        {
                            Id = new Guid("8a660c39-a005-4fa5-8038-f4efbe816c5a"),
                            IsPrimary = false,
                            ProductColorId = new Guid("8aa01376-6057-4ecb-ae2a-5be214ddcae6"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439960/green_2_kf2ll7.jpg"
                        },
                        new
                        {
                            Id = new Guid("1af7ad50-76d2-4d18-b007-79316b4e1ba0"),
                            IsPrimary = true,
                            ProductColorId = new Guid("88cf17db-ff65-4ca1-9aff-edc7943abddf"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/light-gray_1_uyfeh7.jpg"
                        },
                        new
                        {
                            Id = new Guid("1cf2f018-0a6f-4b3f-8abf-325261cb0413"),
                            IsPrimary = false,
                            ProductColorId = new Guid("88cf17db-ff65-4ca1-9aff-edc7943abddf"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440135/light-gray_2_hpszuf.jpg"
                        },
                        new
                        {
                            Id = new Guid("0ee22d01-e51a-4b1f-a39b-5cdfb83ef504"),
                            IsPrimary = true,
                            ProductColorId = new Guid("6ef5bc54-127b-4c64-9eeb-bda6e98efee0"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/natural_1_zmlakv.jpg"
                        },
                        new
                        {
                            Id = new Guid("6d68fd7b-d97f-46c2-8919-3712cf9c68b0"),
                            IsPrimary = false,
                            ProductColorId = new Guid("6ef5bc54-127b-4c64-9eeb-bda6e98efee0"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/natural_2_dfpfn5.jpg"
                        },
                        new
                        {
                            Id = new Guid("0502fca7-b25b-4844-a10d-df7d9a7d19f5"),
                            IsPrimary = true,
                            ProductColorId = new Guid("c391e26b-aaee-4038-9aa4-358c27ffcd8a"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440195/blue_1_hwruph.jpg"
                        },
                        new
                        {
                            Id = new Guid("e35f770e-67d2-4cc2-964d-44b05a54194f"),
                            IsPrimary = false,
                            ProductColorId = new Guid("c391e26b-aaee-4038-9aa4-358c27ffcd8a"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440196/blue_2_ioyjmd.jpg"
                        },
                        new
                        {
                            Id = new Guid("1a6a7a18-1489-4865-8354-539c983876d7"),
                            IsPrimary = true,
                            ProductColorId = new Guid("5300edec-f24d-43c9-98ac-ece6f8162972"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440193/black_1_mvzenu.jpg"
                        },
                        new
                        {
                            Id = new Guid("d79051b7-f46f-4908-8c5d-7f916e18f0a5"),
                            IsPrimary = false,
                            ProductColorId = new Guid("5300edec-f24d-43c9-98ac-ece6f8162972"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440194/black_2_yptvzh.jpg"
                        },
                        new
                        {
                            Id = new Guid("19c3276c-f8fe-4a58-9e2d-f482fa4f4d4b"),
                            IsPrimary = true,
                            ProductColorId = new Guid("52afd94c-134f-40eb-b199-b8be04285dc1"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440253/brown_1_gmlsf5.jpg"
                        },
                        new
                        {
                            Id = new Guid("911dce3e-dd79-4693-b22e-6fa98eac2ff0"),
                            IsPrimary = false,
                            ProductColorId = new Guid("52afd94c-134f-40eb-b199-b8be04285dc1"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440251/brown_2_zqkgfj.jpg"
                        },
                        new
                        {
                            Id = new Guid("6ed86342-6c6e-4ce9-93d6-4d25f22da2d2"),
                            IsPrimary = true,
                            ProductColorId = new Guid("1db07e2d-dc3a-4b77-8625-9701d71d6b22"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440252/navy_1_aewdgs.jpg"
                        },
                        new
                        {
                            Id = new Guid("05635881-8cab-4281-a848-66d76adb4cdc"),
                            IsPrimary = false,
                            ProductColorId = new Guid("1db07e2d-dc3a-4b77-8625-9701d71d6b22"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440253/navy_2_sybyag.jpg"
                        },
                        new
                        {
                            Id = new Guid("49ac97f5-295b-43dd-94e1-f735f0c658e8"),
                            IsPrimary = true,
                            ProductColorId = new Guid("d0c3fa8a-8c14-4e81-ad69-5273d8dc57bb"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440317/white_1_lppqmp.jpg"
                        },
                        new
                        {
                            Id = new Guid("a3494c7c-57ef-4d1b-a13a-687379d8c3f4"),
                            IsPrimary = false,
                            ProductColorId = new Guid("d0c3fa8a-8c14-4e81-ad69-5273d8dc57bb"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440318/white_2_opuzjo.jpg"
                        },
                        new
                        {
                            Id = new Guid("239aa394-f40e-45d0-bad3-bcc0526ff0de"),
                            IsPrimary = true,
                            ProductColorId = new Guid("b116a223-432a-4aff-bd15-9390abb7bfbc"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440315/gray_1_eurozu.jpg"
                        },
                        new
                        {
                            Id = new Guid("fd3db68e-1372-4222-896f-fca78e5d4058"),
                            IsPrimary = false,
                            ProductColorId = new Guid("b116a223-432a-4aff-bd15-9390abb7bfbc"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440316/gray_2_gif5gy.jpg"
                        },
                        new
                        {
                            Id = new Guid("42aa4729-64c2-4511-b4e1-53edf8924983"),
                            IsPrimary = true,
                            ProductColorId = new Guid("6b82f7f9-0614-4352-a900-41887b213bc3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440403/white_1_nd5suu.jpg"
                        },
                        new
                        {
                            Id = new Guid("10f2a7b1-d360-4762-bf6c-2fd68896b754"),
                            IsPrimary = false,
                            ProductColorId = new Guid("6b82f7f9-0614-4352-a900-41887b213bc3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440406/white_2_mbd76x.jpg"
                        },
                        new
                        {
                            Id = new Guid("db9f6ead-3892-414c-8636-789f05515301"),
                            IsPrimary = true,
                            ProductColorId = new Guid("0d7bafff-9962-414e-85d8-9c80221d3e85"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440401/navy_1_vrk8fm.jpg"
                        },
                        new
                        {
                            Id = new Guid("670cca2e-7644-46d7-b70f-6df80a07b7cf"),
                            IsPrimary = false,
                            ProductColorId = new Guid("0d7bafff-9962-414e-85d8-9c80221d3e85"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440402/navy_2_vgb74l.jpg"
                        },
                        new
                        {
                            Id = new Guid("841e635d-cbb8-4a75-98e5-c6ac25b1959c"),
                            IsPrimary = true,
                            ProductColorId = new Guid("619021b8-532e-4a1b-87f7-38571fcd269a"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440458/olive_1_uixjsd.jpg"
                        },
                        new
                        {
                            Id = new Guid("0105a9c6-f7db-46ce-a643-1c5da8990a81"),
                            IsPrimary = false,
                            ProductColorId = new Guid("619021b8-532e-4a1b-87f7-38571fcd269a"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440460/olive_2_q9e65h.jpg"
                        },
                        new
                        {
                            Id = new Guid("cc6baa04-80de-4544-8299-bdd86936b559"),
                            IsPrimary = true,
                            ProductColorId = new Guid("ac4b09da-bf4c-42f4-824f-bc16e81aa413"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440456/beige_1_xaltqx.jpg"
                        },
                        new
                        {
                            Id = new Guid("8d33de52-09d0-46d2-9ec1-1c465f3b674a"),
                            IsPrimary = false,
                            ProductColorId = new Guid("ac4b09da-bf4c-42f4-824f-bc16e81aa413"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440456/beige_2_xf8iqr.jpg"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e15365db-2023-4745-9d7b-c91e40017a9a"),
                            CategoryId = new Guid("8488ca15-ef5c-4e33-bffe-a5d1cb5b3946"),
                            Name = "Áo thun"
                        },
                        new
                        {
                            Id = new Guid("e64cd78d-a9f7-4acd-b8eb-e125b800989e"),
                            CategoryId = new Guid("8488ca15-ef5c-4e33-bffe-a5d1cb5b3946"),
                            Name = "Áo polo"
                        },
                        new
                        {
                            Id = new Guid("063e74e1-9654-4fbb-adc9-69371e7b611d"),
                            CategoryId = new Guid("8488ca15-ef5c-4e33-bffe-a5d1cb5b3946"),
                            Name = "Áo sơ mi"
                        },
                        new
                        {
                            Id = new Guid("061a9d19-ed1b-42eb-aacb-7d8ca99466d7"),
                            CategoryId = new Guid("01af2e2f-f779-46ae-af72-64717834d068"),
                            Name = "Quần Short"
                        },
                        new
                        {
                            Id = new Guid("9a8ff57c-59fc-4f23-838a-0c6a93e55c7a"),
                            CategoryId = new Guid("01af2e2f-f779-46ae-af72-64717834d068"),
                            Name = "Quần Jeans"
                        },
                        new
                        {
                            Id = new Guid("440f4086-1e5f-4285-84b9-5d1e6e53db82"),
                            CategoryId = new Guid("01af2e2f-f779-46ae-af72-64717834d068"),
                            Name = "Quần Tây"
                        },
                        new
                        {
                            Id = new Guid("56a78937-cf4a-479c-b39e-3721696d6148"),
                            CategoryId = new Guid("3bf2fb8d-f7b5-409a-9eb8-1ae92a2e644d"),
                            Name = "Mũ & Mũ lưỡi trai"
                        },
                        new
                        {
                            Id = new Guid("c162dcc8-8e6d-4cf4-b339-dbc33bcc8e0e"),
                            CategoryId = new Guid("3bf2fb8d-f7b5-409a-9eb8-1ae92a2e644d"),
                            Name = "Kính mát"
                        },
                        new
                        {
                            Id = new Guid("d21197a5-f6ba-40b7-980f-91a958844382"),
                            CategoryId = new Guid("3bf2fb8d-f7b5-409a-9eb8-1ae92a2e644d"),
                            Name = "Túi"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcf87b14-38e8-4440-b788-2fafbcccd215"),
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("c150a438-6f06-4617-aa0d-d91b1d6fc78e"),
                            Name = "L"
                        },
                        new
                        {
                            Id = new Guid("a063ae38-bb8b-4187-96fc-6e988d9a4e1c"),
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("13cf56e1-f54d-43ae-8a59-b41dfd710270"),
                            Name = "2XL"
                        },
                        new
                        {
                            Id = new Guid("69522bcb-5754-46b8-b7ff-2d9a5997b7c6"),
                            Name = "3XL"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique()
                        .HasFilter("[CartId] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "32c944b9-669b-4bd7-ab4b-7a06829d9d84",
                            AccessFailedCount = 0,
                            Address = "123 Admin St",
                            ConcurrencyStamp = "1054e68f-0730-4300-a7f1-b5e29fafa0b2",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "EC",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC65jIFVdnsAwyW+rRk80hpu5z+aPLWSovJ8maFatXXf8XyndiM+cdUvEub/ao5PQg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3efcb03d-7624-47c6-8b51-c759db125256",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c733d5c0-70be-43cc-b029-0d0b3abd5fc5",
                            ConcurrencyStamp = "78eec985-6927-4d18-9d66-f601e1c73d21",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "5aaeea95-2f4f-4173-9549-5e290b8ec87b",
                            ConcurrencyStamp = "a3201d1b-56e4-4cc9-82a3-a6145418a7f2",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "32c944b9-669b-4bd7-ab4b-7a06829d9d84",
                            RoleId = "c733d5c0-70be-43cc-b029-0d0b3abd5fc5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.HasOne("EverythingSucks.Models.CartStatus", "CartStatus")
                        .WithMany("Carts")
                        .HasForeignKey("CartStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CartStatus");
                });

            modelBuilder.Entity("EverythingSucks.Models.CartItem", b =>
                {
                    b.HasOne("EverythingSucks.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Cart");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EverythingSucks.Models.Favorite", b =>
                {
                    b.HasOne("EverythingSucks.Models.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.HasOne("EverythingSucks.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EverythingSucks.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderItem", b =>
                {
                    b.HasOne("EverythingSucks.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Order");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.HasOne("EverythingSucks.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.HasOne("EverythingSucks.Models.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductImage", b =>
                {
                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.HasOne("EverythingSucks.Models.Category", "Category")
                        .WithMany("ProductTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.HasOne("EverythingSucks.Models.Cart", "Cart")
                        .WithOne("User")
                        .HasForeignKey("EverythingSucks.Models.User", "CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.CartStatus", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("EverythingSucks.Models.Category", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("EverythingSucks.Models.Color", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
