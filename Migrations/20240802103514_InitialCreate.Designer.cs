// <auto-generated />
using System;
using EverythingSucks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EverythingSucks.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802103514_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartStatusId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.CartStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CartStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b10a4294-645b-462d-bb4f-198b72cf9904"),
                            Name = "Có hàng"
                        },
                        new
                        {
                            Id = new Guid("cd666bd1-f7a9-4355-a6f4-b395f40de032"),
                            Name = "Trống"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4de85204-0560-405f-9a9b-a6f4d7ea1487"),
                            Name = "Áo"
                        },
                        new
                        {
                            Id = new Guid("fc9ffec4-b595-4740-acd9-76cd598f56b9"),
                            Name = "Quần"
                        },
                        new
                        {
                            Id = new Guid("f9ac455f-41da-4983-8891-aae2b7058424"),
                            Name = "Phụ kiện"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6ec535c-29b5-4491-ba0f-ace916ce6f8d"),
                            ColorCode = "#FFFFFF",
                            Name = "White"
                        },
                        new
                        {
                            Id = new Guid("00e23392-e844-4c50-b20b-252e65b05c54"),
                            ColorCode = "#DEDEDE",
                            Name = "Grey"
                        },
                        new
                        {
                            Id = new Guid("68c07f92-fa29-4296-8bb3-600a8e7750ae"),
                            ColorCode = "#3D3D3D",
                            Name = "Black"
                        },
                        new
                        {
                            Id = new Guid("757b58f5-54a8-4fce-ad27-79b2cd5fbc84"),
                            ColorCode = "#F5C0C9",
                            Name = "Pink"
                        },
                        new
                        {
                            Id = new Guid("0a3e66f0-0ac5-4075-9916-78217c4c4c93"),
                            ColorCode = "#EB3417",
                            Name = "Red"
                        },
                        new
                        {
                            Id = new Guid("f69ce8c3-2546-4a35-bac0-ea9dfb8a7207"),
                            ColorCode = "#F3A72C",
                            Name = "Orange"
                        },
                        new
                        {
                            Id = new Guid("eb0a1ce8-f538-475b-9dfc-b674a4182def"),
                            ColorCode = "#EFEBD4",
                            Name = "Beige"
                        },
                        new
                        {
                            Id = new Guid("1cb1c8b3-e020-49d3-8251-dfd26eba8ef9"),
                            ColorCode = "#714E36",
                            Name = "Brown"
                        },
                        new
                        {
                            Id = new Guid("3535b3df-3d13-4c8b-af77-171cd5e342c5"),
                            ColorCode = "#FFFF3F",
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("28fa8ebf-6946-4b74-a552-77a4f6a956ea"),
                            ColorCode = "#387D1F",
                            Name = "Green"
                        },
                        new
                        {
                            Id = new Guid("cfd6a0e9-37ff-46c6-826c-43ef9d53e6cb"),
                            ColorCode = "#0003F9",
                            Name = "Blue"
                        },
                        new
                        {
                            Id = new Guid("fb9fa8b3-3d12-4524-b4d0-27a4425e2a82"),
                            ColorCode = "#741A7C",
                            Name = "Purple"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Favorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FavoriteAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1ca1b6d-be04-4b89-84e3-5aae0ceec124"),
                            Name = "Đang chờ xác nhận"
                        },
                        new
                        {
                            Id = new Guid("2f8cc928-03b4-4a30-81cb-3b2c9f821751"),
                            Name = "Xác nhận"
                        },
                        new
                        {
                            Id = new Guid("b96b185a-8f06-4674-bcd5-aed0ad300acd"),
                            Name = "Chờ giao hàng"
                        },
                        new
                        {
                            Id = new Guid("b8431a34-b0b2-43e7-9ae5-447335e7ec19"),
                            Name = "Đã giao"
                        },
                        new
                        {
                            Id = new Guid("a5cf6b86-d897-4e40-a6bd-f778107ab374"),
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8d25d58-1140-4a6a-8f18-2f4faec2bdd0"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(805),
                            Description = "Bộ sưu tập U từ thương hiệu Uniqlo là kết tinh sáng tạo của đội ngũ thiết kế quốc tế tận tâm và tài năng đến từ Trung tâm Nghiên cứu và Phát triển Paris, dưới sự dẫn dắt của Giám đốc Nghệ thuật Christophe Lemaire.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Dáng Rộng Tay Lỡ",
                            Price = 391000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(814)
                        },
                        new
                        {
                            Id = new Guid("e620841b-871e-49d6-b4dc-7890d00ae6b5"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(819),
                            Description = "Vải 'DRY-EX' nhanh chóng hấp thụ và hút ẩm để giữ cho làn da của bạn cảm giác tươi mát.",
                            IsDeleted = false,
                            Name = "DRY-EX Áo Thun Cổ Tròn",
                            Price = 391000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(819)
                        },
                        new
                        {
                            Id = new Guid("334f7595-c66a-4cfb-aa5f-5575a5ed44f3"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(821),
                            Description = "Chất liệu 100% cotton bền chắc, cổ áo được làm bằng vải mềm, thiết kế giản dị lấy cảm hứng từ áo bóng bầu dục cổ điển.",
                            IsDeleted = false,
                            Name = "Áo Thun Vải Cotton Cổ Henley Ngắn Tay",
                            Price = 489000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(821)
                        },
                        new
                        {
                            Id = new Guid("558c3fce-6292-4bc3-999e-f81ca3d4916e"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(823),
                            Description = "Chất liệu 100% cotton cực dày dặn, cảm giác sắc nét, mịn màng, được giặt trước một lần nước để có phong cách hoàn toàn giản dị.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Kẻ Sọc Cổ Tròn Tay Lỡ",
                            Price = 391000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(824)
                        },
                        new
                        {
                            Id = new Guid("3ee84e29-6ca8-4686-9b26-946926f60002"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(825),
                            Description = "100% cotton SUPIMA® cao cấp, mịn màng, thiết kế cơ bản phù hợp tạo kiểu với nhiều phong cách khác nhau từ đơn giản đến layer, được thiết kế tỉ mỉ đến từng chi tiết, từ chiều rộng cổ áo đến đường may.",
                            IsDeleted = false,
                            Name = "Áo Thun Supima Cotton Cổ Tròn Ngắn Tay",
                            Price = 391000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(826)
                        },
                        new
                        {
                            Id = new Guid("92e69b3d-36d4-49a7-93cc-ad3c397e2a70"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(827),
                            Description = "Cảm giác giản dị của cotton, lớp lót polyester Với công nghệ DRY khô nhanh, thiết kế cơ bản mà bạn có thể tự tạo phong cách riêng hoặc theo Kiểu layer.",
                            IsDeleted = false,
                            Name = "Áo Thun Dry Cổ Tròn Nhiều Màu",
                            Price = 146000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(828)
                        },
                        new
                        {
                            Id = new Guid("7ba4e307-667c-4683-9fd8-58334be00eec"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(830),
                            Description = "Chất liệu vải jersey 100% cotton dày dặn, mang lại cảm giác tươi mát, vải jersey khô được dệt nhỏ gọn có độ bền cao và có đặc tính sau mỗi lần giặt, buộc dây ở cổ áo giúp giữ nguyên kiểu dáng đường viền cổ áo.",
                            IsDeleted = false,
                            Name = "Áo Thun Cổ Tròn Ngắn Tay",
                            Price = 293000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(830)
                        },
                        new
                        {
                            Id = new Guid("e347acab-4b00-4fb3-bb8f-e81c4629db3d"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(832),
                            Description = "Một phiên bản mới của chiếc áo thun cổ tròn vải waffle nay đã có mặt, được thiết kế với kiểu dáng đơn giản, không có túi ở phần trước ngực, cải tiến với đường may thẳng cùng kiểu dáng xẻ tà, dễ dàng mặc cho mọi dịp.",
                            IsDeleted = false,
                            Name = "Áo Thun Vải Waffle Dài Tay",
                            Price = 391000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(832)
                        },
                        new
                        {
                            Id = new Guid("dcd470e6-9e95-4296-9b5c-e949639e8aaf"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(834),
                            Description = "Vải 'AIRism' mịn màng trông như cotton, cổ tròn hẹp mang lại vẻ ngoài bóng bẩy, vai trễ và tay áo dài đến một nửa rộng rãi, chất liệu vải tạo dáng tôn dáng.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Dáng Rộng",
                            Price = 391000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(834)
                        },
                        new
                        {
                            Id = new Guid("b68880b2-2ed9-4039-94a7-3cdcff86f5f4"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(837),
                            Description = "Chất vải 'AIRism' mịn màng trông như cotton, Với công nghệ DRY khô nhanh, chất liệu vải sắc nét tạo nên kiểu dáng đẹp mắt.",
                            IsDeleted = false,
                            Name = "AIRism Cotton Áo Thun Không Tay",
                            Price = 293000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(838)
                        },
                        new
                        {
                            Id = new Guid("3e7fac1f-f0da-4fbb-9725-2b2a4b6a0715"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(840),
                            Description = "Phần thân được làm từ chất liệu 100% cotton cực dày dặn, cảm giác khá sắc nét, mịn màng, giữ nguyên hình dạng sau khi giặt.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Tay Lỡ (Ringer)",
                            Price = 293000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(840)
                        },
                        new
                        {
                            Id = new Guid("e7900470-56f9-423d-9ddb-bfc2d28973ac"),
                            CreatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(842),
                            Description = "Chất liệu 100% cotton dày dặn hoàn hảo, cảm giác sắc nét, mịn màng, giữ nguyên hình dạng sau khi giặt.",
                            IsDeleted = false,
                            Name = "Áo Thun Dáng Rộng Tay Lỡ (Raglan)",
                            Price = 293000m,
                            ProductTypeId = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            UpdatedAt = new DateTime(2024, 8, 2, 17, 35, 14, 495, DateTimeKind.Local).AddTicks(842)
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProdductColor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4c4c78c-d475-4ec9-8154-77b140080c9e"),
                            ColorId = new Guid("68c07f92-fa29-4296-8bb3-600a8e7750ae"),
                            ProductId = new Guid("c8d25d58-1140-4a6a-8f18-2f4faec2bdd0")
                        },
                        new
                        {
                            Id = new Guid("4e8127fe-87ab-4bde-ac56-ae7e966cf44f"),
                            ColorId = new Guid("e6ec535c-29b5-4491-ba0f-ace916ce6f8d"),
                            ProductId = new Guid("c8d25d58-1140-4a6a-8f18-2f4faec2bdd0")
                        },
                        new
                        {
                            Id = new Guid("f8d1337c-df9c-471a-aff8-a84dfee9af37"),
                            ColorId = new Guid("cfd6a0e9-37ff-46c6-826c-43ef9d53e6cb"),
                            ProductId = new Guid("e620841b-871e-49d6-b4dc-7890d00ae6b5")
                        },
                        new
                        {
                            Id = new Guid("7d7baab9-ec37-4484-8ada-65ffd9575b17"),
                            ColorId = new Guid("68c07f92-fa29-4296-8bb3-600a8e7750ae"),
                            ProductId = new Guid("e620841b-871e-49d6-b4dc-7890d00ae6b5")
                        },
                        new
                        {
                            Id = new Guid("ac592a1a-7873-4cff-8cbe-ca31d28d1e56"),
                            ColorId = new Guid("68c07f92-fa29-4296-8bb3-600a8e7750ae"),
                            ProductId = new Guid("334f7595-c66a-4cfb-aa5f-5575a5ed44f3")
                        },
                        new
                        {
                            Id = new Guid("9a04284e-a517-4e6b-b9c0-0267b003c401"),
                            ColorId = new Guid("28fa8ebf-6946-4b74-a552-77a4f6a956ea"),
                            ProductId = new Guid("334f7595-c66a-4cfb-aa5f-5575a5ed44f3")
                        },
                        new
                        {
                            Id = new Guid("e0ea5ba2-8c2c-492c-aacd-dc86f2b6baa3"),
                            ColorId = new Guid("757b58f5-54a8-4fce-ad27-79b2cd5fbc84"),
                            ProductId = new Guid("558c3fce-6292-4bc3-999e-f81ca3d4916e")
                        },
                        new
                        {
                            Id = new Guid("04d12b74-a0e9-4251-8dbb-9f6d2cfa55ec"),
                            ColorId = new Guid("cfd6a0e9-37ff-46c6-826c-43ef9d53e6cb"),
                            ProductId = new Guid("558c3fce-6292-4bc3-999e-f81ca3d4916e")
                        },
                        new
                        {
                            Id = new Guid("bedf5b56-b580-4f91-9d52-3c50f6cb162e"),
                            ColorId = new Guid("00e23392-e844-4c50-b20b-252e65b05c54"),
                            ProductId = new Guid("3ee84e29-6ca8-4686-9b26-946926f60002")
                        },
                        new
                        {
                            Id = new Guid("1ec6f99f-58ee-45dc-88b8-2ae84d424c43"),
                            ColorId = new Guid("0a3e66f0-0ac5-4075-9916-78217c4c4c93"),
                            ProductId = new Guid("3ee84e29-6ca8-4686-9b26-946926f60002")
                        },
                        new
                        {
                            Id = new Guid("093240e3-c0b4-462a-b3ab-a776b56defee"),
                            ColorId = new Guid("1cb1c8b3-e020-49d3-8251-dfd26eba8ef9"),
                            ProductId = new Guid("92e69b3d-36d4-49a7-93cc-ad3c397e2a70")
                        },
                        new
                        {
                            Id = new Guid("36947dbc-0517-4751-9841-601d9c79104d"),
                            ColorId = new Guid("28fa8ebf-6946-4b74-a552-77a4f6a956ea"),
                            ProductId = new Guid("92e69b3d-36d4-49a7-93cc-ad3c397e2a70")
                        },
                        new
                        {
                            Id = new Guid("cc710d02-65f7-4b27-a6f6-e538c5a603e4"),
                            ColorId = new Guid("00e23392-e844-4c50-b20b-252e65b05c54"),
                            ProductId = new Guid("7ba4e307-667c-4683-9fd8-58334be00eec")
                        },
                        new
                        {
                            Id = new Guid("18f29a07-6b4e-4fc5-aa5c-535d4ffcbcad"),
                            ColorId = new Guid("eb0a1ce8-f538-475b-9dfc-b674a4182def"),
                            ProductId = new Guid("7ba4e307-667c-4683-9fd8-58334be00eec")
                        },
                        new
                        {
                            Id = new Guid("e4999fd3-c9f4-4b58-9c82-5c71d421910d"),
                            ColorId = new Guid("cfd6a0e9-37ff-46c6-826c-43ef9d53e6cb"),
                            ProductId = new Guid("e347acab-4b00-4fb3-bb8f-e81c4629db3d")
                        },
                        new
                        {
                            Id = new Guid("7c65956f-f339-4e5b-b638-b2a36b2414d3"),
                            ColorId = new Guid("68c07f92-fa29-4296-8bb3-600a8e7750ae"),
                            ProductId = new Guid("e347acab-4b00-4fb3-bb8f-e81c4629db3d")
                        },
                        new
                        {
                            Id = new Guid("45b187d9-2f06-434d-a932-85efd4d77b5f"),
                            ColorId = new Guid("1cb1c8b3-e020-49d3-8251-dfd26eba8ef9"),
                            ProductId = new Guid("dcd470e6-9e95-4296-9b5c-e949639e8aaf")
                        },
                        new
                        {
                            Id = new Guid("0a00fddd-b9ba-4ec4-a186-95d6cc537e58"),
                            ColorId = new Guid("cfd6a0e9-37ff-46c6-826c-43ef9d53e6cb"),
                            ProductId = new Guid("dcd470e6-9e95-4296-9b5c-e949639e8aaf")
                        },
                        new
                        {
                            Id = new Guid("62720260-acd0-4fed-8790-06702233f6cc"),
                            ColorId = new Guid("e6ec535c-29b5-4491-ba0f-ace916ce6f8d"),
                            ProductId = new Guid("b68880b2-2ed9-4039-94a7-3cdcff86f5f4")
                        },
                        new
                        {
                            Id = new Guid("92a6068e-ced7-48a2-9d69-0dd977162b39"),
                            ColorId = new Guid("00e23392-e844-4c50-b20b-252e65b05c54"),
                            ProductId = new Guid("b68880b2-2ed9-4039-94a7-3cdcff86f5f4")
                        },
                        new
                        {
                            Id = new Guid("4971ab26-e279-48b6-bb5f-8f279a050bdb"),
                            ColorId = new Guid("e6ec535c-29b5-4491-ba0f-ace916ce6f8d"),
                            ProductId = new Guid("3e7fac1f-f0da-4fbb-9725-2b2a4b6a0715")
                        },
                        new
                        {
                            Id = new Guid("ce8c600f-0e60-420d-8dd7-48c9a52b4a57"),
                            ColorId = new Guid("cfd6a0e9-37ff-46c6-826c-43ef9d53e6cb"),
                            ProductId = new Guid("3e7fac1f-f0da-4fbb-9725-2b2a4b6a0715")
                        },
                        new
                        {
                            Id = new Guid("9cb06349-4e63-4ecd-aa28-696f9278ef6e"),
                            ColorId = new Guid("28fa8ebf-6946-4b74-a552-77a4f6a956ea"),
                            ProductId = new Guid("e7900470-56f9-423d-9ddb-bfc2d28973ac")
                        },
                        new
                        {
                            Id = new Guid("ae7605fe-cbaa-48ad-a46e-4d667aea3a65"),
                            ColorId = new Guid("eb0a1ce8-f538-475b-9dfc-b674a4182def"),
                            ProductId = new Guid("e7900470-56f9-423d-9ddb-bfc2d28973ac")
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductColorId");

                    b.ToTable("ProductImage", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0666852e-b824-4550-b716-226cdf46fb2a"),
                            IsPrimary = true,
                            ProductColorId = new Guid("b4c4c78c-d475-4ec9-8154-77b140080c9e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438090/black_1_gkqv9b.jpg"
                        },
                        new
                        {
                            Id = new Guid("9f32d698-ca02-4204-8ec0-18bcfb6b12f6"),
                            IsPrimary = false,
                            ProductColorId = new Guid("b4c4c78c-d475-4ec9-8154-77b140080c9e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438090/black_2_sx4vva.jpg"
                        },
                        new
                        {
                            Id = new Guid("d2fdb252-13ae-436a-be74-8b6cdebf4e97"),
                            IsPrimary = true,
                            ProductColorId = new Guid("4e8127fe-87ab-4bde-ac56-ae7e966cf44f"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438076/white_1_t5dag8.jpg"
                        },
                        new
                        {
                            Id = new Guid("c885f72a-0ea1-4c06-89a9-f675bab40c6f"),
                            IsPrimary = false,
                            ProductColorId = new Guid("4e8127fe-87ab-4bde-ac56-ae7e966cf44f"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438077/white_2_oicoau.jpg"
                        },
                        new
                        {
                            Id = new Guid("8730995d-5a67-47ae-bb46-650cef10213d"),
                            IsPrimary = true,
                            ProductColorId = new Guid("f8d1337c-df9c-471a-aff8-a84dfee9af37"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438404/blue_1_eaakhx.jpg"
                        },
                        new
                        {
                            Id = new Guid("d3af0431-22b5-4ea1-925f-ba4d40959142"),
                            IsPrimary = false,
                            ProductColorId = new Guid("f8d1337c-df9c-471a-aff8-a84dfee9af37"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438404/blue_2_pvuo6o.jpg"
                        },
                        new
                        {
                            Id = new Guid("3fd593df-4c1c-4943-a0cd-190f578f320e"),
                            IsPrimary = true,
                            ProductColorId = new Guid("7d7baab9-ec37-4484-8ada-65ffd9575b17"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438394/black_1_r9smbn.jpg"
                        },
                        new
                        {
                            Id = new Guid("305aaaa7-a4f2-4e96-8ffd-94a551f2514d"),
                            IsPrimary = false,
                            ProductColorId = new Guid("7d7baab9-ec37-4484-8ada-65ffd9575b17"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722438394/black_2_rhdpsy.jpg"
                        },
                        new
                        {
                            Id = new Guid("08a1ecd6-c35f-43ab-9e56-f033cf5b0a7d"),
                            IsPrimary = true,
                            ProductColorId = new Guid("ac592a1a-7873-4cff-8cbe-ca31d28d1e56"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439223/black_1_lbqxjg.jpg"
                        },
                        new
                        {
                            Id = new Guid("06ea1484-c162-4715-bfbf-af58c336b03f"),
                            IsPrimary = false,
                            ProductColorId = new Guid("ac592a1a-7873-4cff-8cbe-ca31d28d1e56"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439221/black_2_xkoq54.jpg"
                        },
                        new
                        {
                            Id = new Guid("c0f52c9b-075b-443c-98bb-223176ff9d18"),
                            IsPrimary = true,
                            ProductColorId = new Guid("9a04284e-a517-4e6b-b9c0-0267b003c401"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439221/olive_1_faf0az.jpg"
                        },
                        new
                        {
                            Id = new Guid("f55f2d2c-37be-4a64-bd0d-cb6f7317fd4b"),
                            IsPrimary = false,
                            ProductColorId = new Guid("9a04284e-a517-4e6b-b9c0-0267b003c401"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439222/olive_2_ovtcev.jpg"
                        },
                        new
                        {
                            Id = new Guid("0e3b7490-ba97-47de-a544-452892d330f0"),
                            IsPrimary = true,
                            ProductColorId = new Guid("e0ea5ba2-8c2c-492c-aacd-dc86f2b6baa3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/pink_1_v0tcxo.jpg"
                        },
                        new
                        {
                            Id = new Guid("21b1ae7d-7eb5-42a2-acba-a5d13b72868e"),
                            IsPrimary = false,
                            ProductColorId = new Guid("e0ea5ba2-8c2c-492c-aacd-dc86f2b6baa3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/pink_2_ygzmiw.jpg"
                        },
                        new
                        {
                            Id = new Guid("38986c7c-4705-4d89-9802-441404a1b441"),
                            IsPrimary = true,
                            ProductColorId = new Guid("04d12b74-a0e9-4251-8dbb-9f6d2cfa55ec"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439524/navy_1_kkhyqa.jpg"
                        },
                        new
                        {
                            Id = new Guid("cdccbcd9-d578-47ac-9104-5fef26736015"),
                            IsPrimary = false,
                            ProductColorId = new Guid("04d12b74-a0e9-4251-8dbb-9f6d2cfa55ec"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439525/navy_2_kolxaz.jpg"
                        },
                        new
                        {
                            Id = new Guid("f01d03c1-66ab-4acd-bac8-505e5b379013"),
                            IsPrimary = true,
                            ProductColorId = new Guid("bedf5b56-b580-4f91-9d52-3c50f6cb162e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439897/gray_1_lzp7go.jpg"
                        },
                        new
                        {
                            Id = new Guid("c1085d1d-7389-453f-a521-d20e439d9fa8"),
                            IsPrimary = false,
                            ProductColorId = new Guid("bedf5b56-b580-4f91-9d52-3c50f6cb162e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/gray_2_bzzytk.jpg"
                        },
                        new
                        {
                            Id = new Guid("1a14825a-a674-4834-bb12-65a70b339003"),
                            IsPrimary = true,
                            ProductColorId = new Guid("1ec6f99f-58ee-45dc-88b8-2ae84d424c43"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/wine_1_zht2re.jpg"
                        },
                        new
                        {
                            Id = new Guid("341946ee-d0d4-4249-8209-6edbee2d1150"),
                            IsPrimary = false,
                            ProductColorId = new Guid("1ec6f99f-58ee-45dc-88b8-2ae84d424c43"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439896/wine_2_oohqly.jpg"
                        },
                        new
                        {
                            Id = new Guid("d3635f3a-ab12-4c4c-834c-e083e5e40f4e"),
                            IsPrimary = true,
                            ProductColorId = new Guid("093240e3-c0b4-462a-b3ab-a776b56defee"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/brown_1_h2bauh.jpg"
                        },
                        new
                        {
                            Id = new Guid("3ed27361-589f-4a73-a689-dc678c8acb8a"),
                            IsPrimary = false,
                            ProductColorId = new Guid("093240e3-c0b4-462a-b3ab-a776b56defee"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/brown_2_vj3zqp.jpg"
                        },
                        new
                        {
                            Id = new Guid("ff389c2d-ad96-4938-9dfd-1ac0bfbf4d26"),
                            IsPrimary = true,
                            ProductColorId = new Guid("36947dbc-0517-4751-9841-601d9c79104d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439959/green_1_pwrndf.jpg"
                        },
                        new
                        {
                            Id = new Guid("68ed9dfc-dce3-4962-a8d4-f1450c306c22"),
                            IsPrimary = false,
                            ProductColorId = new Guid("36947dbc-0517-4751-9841-601d9c79104d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722439960/green_2_kf2ll7.jpg"
                        },
                        new
                        {
                            Id = new Guid("e1da8949-7961-42fa-bf94-e0942521a539"),
                            IsPrimary = true,
                            ProductColorId = new Guid("cc710d02-65f7-4b27-a6f6-e538c5a603e4"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/light-gray_1_uyfeh7.jpg"
                        },
                        new
                        {
                            Id = new Guid("77336544-da04-4dcf-a26a-4b02c803d304"),
                            IsPrimary = false,
                            ProductColorId = new Guid("cc710d02-65f7-4b27-a6f6-e538c5a603e4"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440135/light-gray_2_hpszuf.jpg"
                        },
                        new
                        {
                            Id = new Guid("31cc6857-1915-410a-9e88-6761a4f66af1"),
                            IsPrimary = true,
                            ProductColorId = new Guid("18f29a07-6b4e-4fc5-aa5c-535d4ffcbcad"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/natural_1_zmlakv.jpg"
                        },
                        new
                        {
                            Id = new Guid("71ab1755-3c54-4c6c-a1fd-271682484c8a"),
                            IsPrimary = false,
                            ProductColorId = new Guid("18f29a07-6b4e-4fc5-aa5c-535d4ffcbcad"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440136/natural_2_dfpfn5.jpg"
                        },
                        new
                        {
                            Id = new Guid("071b5451-7017-4dda-9167-67b72d2431f4"),
                            IsPrimary = true,
                            ProductColorId = new Guid("e4999fd3-c9f4-4b58-9c82-5c71d421910d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440195/blue_1_hwruph.jpg"
                        },
                        new
                        {
                            Id = new Guid("007ec052-5824-48bf-95ce-3fff18bfe63f"),
                            IsPrimary = false,
                            ProductColorId = new Guid("e4999fd3-c9f4-4b58-9c82-5c71d421910d"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440196/blue_2_ioyjmd.jpg"
                        },
                        new
                        {
                            Id = new Guid("b1151b1c-3c74-4594-a109-3c0e7c402cd1"),
                            IsPrimary = true,
                            ProductColorId = new Guid("7c65956f-f339-4e5b-b638-b2a36b2414d3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440193/black_1_mvzenu.jpg"
                        },
                        new
                        {
                            Id = new Guid("ee15e5d0-0048-47fb-91f0-335a4c5c79e5"),
                            IsPrimary = false,
                            ProductColorId = new Guid("7c65956f-f339-4e5b-b638-b2a36b2414d3"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440194/black_2_yptvzh.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0b62756-d9d6-4245-958e-69c7910b4d7a"),
                            IsPrimary = true,
                            ProductColorId = new Guid("45b187d9-2f06-434d-a932-85efd4d77b5f"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440253/brown_1_gmlsf5.jpg"
                        },
                        new
                        {
                            Id = new Guid("e768e1c6-d061-4c19-a4f0-4ecfa8de0054"),
                            IsPrimary = false,
                            ProductColorId = new Guid("45b187d9-2f06-434d-a932-85efd4d77b5f"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440251/brown_2_zqkgfj.jpg"
                        },
                        new
                        {
                            Id = new Guid("28449abf-6edd-4fc8-8394-fd74d186e828"),
                            IsPrimary = true,
                            ProductColorId = new Guid("0a00fddd-b9ba-4ec4-a186-95d6cc537e58"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440252/navy_1_aewdgs.jpg"
                        },
                        new
                        {
                            Id = new Guid("20084984-043e-451f-8709-4049a7eaeb8b"),
                            IsPrimary = false,
                            ProductColorId = new Guid("0a00fddd-b9ba-4ec4-a186-95d6cc537e58"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440253/navy_2_sybyag.jpg"
                        },
                        new
                        {
                            Id = new Guid("fcbdbdb7-9e54-4733-8985-69859300d867"),
                            IsPrimary = true,
                            ProductColorId = new Guid("62720260-acd0-4fed-8790-06702233f6cc"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440317/white_1_lppqmp.jpg"
                        },
                        new
                        {
                            Id = new Guid("0425635a-99e7-4465-b7d4-777fa7998d08"),
                            IsPrimary = false,
                            ProductColorId = new Guid("62720260-acd0-4fed-8790-06702233f6cc"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440318/white_2_opuzjo.jpg"
                        },
                        new
                        {
                            Id = new Guid("ba140479-b68e-435b-a031-e5fce4e5ada5"),
                            IsPrimary = true,
                            ProductColorId = new Guid("92a6068e-ced7-48a2-9d69-0dd977162b39"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440315/gray_1_eurozu.jpg"
                        },
                        new
                        {
                            Id = new Guid("35f732bf-6d75-4aba-aa25-750693420f92"),
                            IsPrimary = false,
                            ProductColorId = new Guid("92a6068e-ced7-48a2-9d69-0dd977162b39"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440316/gray_2_gif5gy.jpg"
                        },
                        new
                        {
                            Id = new Guid("ae4b3729-6360-4049-bcb1-1270273c6736"),
                            IsPrimary = true,
                            ProductColorId = new Guid("4971ab26-e279-48b6-bb5f-8f279a050bdb"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440403/white_1_nd5suu.jpg"
                        },
                        new
                        {
                            Id = new Guid("2f675fa2-1da7-4e2b-9b0d-302001bffbd1"),
                            IsPrimary = false,
                            ProductColorId = new Guid("4971ab26-e279-48b6-bb5f-8f279a050bdb"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440406/white_2_mbd76x.jpg"
                        },
                        new
                        {
                            Id = new Guid("873ecbbf-54c2-4f8a-9e09-7cc9a1cc800c"),
                            IsPrimary = true,
                            ProductColorId = new Guid("ce8c600f-0e60-420d-8dd7-48c9a52b4a57"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440401/navy_1_vrk8fm.jpg"
                        },
                        new
                        {
                            Id = new Guid("51f1e78a-c51a-4357-97f4-2f274ebdafca"),
                            IsPrimary = false,
                            ProductColorId = new Guid("ce8c600f-0e60-420d-8dd7-48c9a52b4a57"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440402/navy_2_vgb74l.jpg"
                        },
                        new
                        {
                            Id = new Guid("cea2af4a-d60a-4c84-adb3-f81aaea9aee4"),
                            IsPrimary = true,
                            ProductColorId = new Guid("9cb06349-4e63-4ecd-aa28-696f9278ef6e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440458/olive_1_uixjsd.jpg"
                        },
                        new
                        {
                            Id = new Guid("96aa75d9-c888-49dc-903c-55af6b188ce8"),
                            IsPrimary = false,
                            ProductColorId = new Guid("9cb06349-4e63-4ecd-aa28-696f9278ef6e"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440460/olive_2_q9e65h.jpg"
                        },
                        new
                        {
                            Id = new Guid("be6bbf10-65c6-49d2-81ca-5c83944aed58"),
                            IsPrimary = true,
                            ProductColorId = new Guid("ae7605fe-cbaa-48ad-a46e-4d667aea3a65"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440456/beige_1_xaltqx.jpg"
                        },
                        new
                        {
                            Id = new Guid("c5d29f9c-0981-466c-84df-8156d996b9c7"),
                            IsPrimary = false,
                            ProductColorId = new Guid("ae7605fe-cbaa-48ad-a46e-4d667aea3a65"),
                            Url = "https://res.cloudinary.com/djsdux2v9/image/upload/v1722440456/beige_2_xf8iqr.jpg"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f35b93ca-b8d8-4a21-b1af-6ff7ac96f9a7"),
                            CategoryId = new Guid("4de85204-0560-405f-9a9b-a6f4d7ea1487"),
                            Name = "Áo thun"
                        },
                        new
                        {
                            Id = new Guid("5278fcb4-2857-4397-8e68-7a95731f29c1"),
                            CategoryId = new Guid("4de85204-0560-405f-9a9b-a6f4d7ea1487"),
                            Name = "Áo polo"
                        },
                        new
                        {
                            Id = new Guid("189a0409-4e45-4e86-9551-76c83483de86"),
                            CategoryId = new Guid("4de85204-0560-405f-9a9b-a6f4d7ea1487"),
                            Name = "Áo sơ mi"
                        },
                        new
                        {
                            Id = new Guid("8d725127-621e-48bd-9f08-08278a163afe"),
                            CategoryId = new Guid("fc9ffec4-b595-4740-acd9-76cd598f56b9"),
                            Name = "Quần Short"
                        },
                        new
                        {
                            Id = new Guid("72c922f9-7196-4ec1-b2df-feca550d985b"),
                            CategoryId = new Guid("fc9ffec4-b595-4740-acd9-76cd598f56b9"),
                            Name = "Quần Jeans"
                        },
                        new
                        {
                            Id = new Guid("bea03f3c-0eed-4665-bc50-ca73398848cd"),
                            CategoryId = new Guid("fc9ffec4-b595-4740-acd9-76cd598f56b9"),
                            Name = "Quần Tây"
                        },
                        new
                        {
                            Id = new Guid("c82ee7c2-deb0-4c9a-8abe-f0d27e156d0a"),
                            CategoryId = new Guid("f9ac455f-41da-4983-8891-aae2b7058424"),
                            Name = "Mũ & Mũ lưỡi trai"
                        },
                        new
                        {
                            Id = new Guid("49881797-7198-4998-973f-d069659357cd"),
                            CategoryId = new Guid("f9ac455f-41da-4983-8891-aae2b7058424"),
                            Name = "Kính mát"
                        },
                        new
                        {
                            Id = new Guid("ccde8b8c-2279-443e-9dc9-8447eb880ca5"),
                            CategoryId = new Guid("f9ac455f-41da-4983-8891-aae2b7058424"),
                            Name = "Túi"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc732479-4839-4d06-830c-7a74bb95f6db"),
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("b8ae4678-5dbd-4192-a151-81b3bd130243"),
                            Name = "L"
                        },
                        new
                        {
                            Id = new Guid("b3a63acf-eda9-48b3-814c-f24d72c27be8"),
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("4f9c5a76-f7f8-4737-b2df-0c974561a0f7"),
                            Name = "2XL"
                        },
                        new
                        {
                            Id = new Guid("32bc7f03-6493-411f-9ac1-7061a42f3c0f"),
                            Name = "3XL"
                        });
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique()
                        .HasFilter("[CartId] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fe7283b4-661a-4230-8a12-eb06cc16ba3c",
                            ConcurrencyStamp = "f45bc4bc-f869-4706-85b6-bacf60a7e646",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "b3980b2e-fc1d-41ed-997f-a6407920f048",
                            ConcurrencyStamp = "41f7081c-639d-4728-addc-d8d281432ea8",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.HasOne("EverythingSucks.Models.CartStatus", "CartStatus")
                        .WithMany("Carts")
                        .HasForeignKey("CartStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CartStatus");
                });

            modelBuilder.Entity("EverythingSucks.Models.CartItem", b =>
                {
                    b.HasOne("EverythingSucks.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Product", null)
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId");

                    b.HasOne("EverythingSucks.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Cart");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EverythingSucks.Models.Favorite", b =>
                {
                    b.HasOne("EverythingSucks.Models.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.HasOne("EverythingSucks.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderItem", b =>
                {
                    b.HasOne("EverythingSucks.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId");

                    b.HasOne("EverythingSucks.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Order");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.HasOne("EverythingSucks.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.HasOne("EverythingSucks.Models.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EverythingSucks.Models.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductImage", b =>
                {
                    b.HasOne("EverythingSucks.Models.ProductColor", "ProductColor")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.HasOne("EverythingSucks.Models.Category", "Category")
                        .WithMany("ProductTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.HasOne("EverythingSucks.Models.Cart", "Cart")
                        .WithOne("User")
                        .HasForeignKey("EverythingSucks.Models.User", "CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EverythingSucks.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverythingSucks.Models.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EverythingSucks.Models.CartStatus", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("EverythingSucks.Models.Category", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("EverythingSucks.Models.Color", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("EverythingSucks.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EverythingSucks.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EverythingSucks.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Favorites");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductColor", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("EverythingSucks.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EverythingSucks.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
